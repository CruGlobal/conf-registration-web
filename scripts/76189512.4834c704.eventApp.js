"use strict";angular.module("confRegistrationWebApp",["ngRoute","ngCookies","ngSanitize","ngFacebook","ui.bootstrap","ui.tree","wysiwyg.module","gettext"]).config(function($routeProvider){$routeProvider.when("/",{templateUrl:"views/70b63608.70b63608.landing.html",controller:"landingCtrl"}).when("/register/:conferenceId",{resolve:{redirect:["$location","$route",function($location,$route){$location.path("/register/"+$route.current.params.conferenceId+"/page/")}]}}).when("/register/:conferenceId/page/:pageId?",{templateUrl:"views/23cf8f0e.23cf8f0e.registration.html",controller:"RegistrationCtrl",authorization:{requireLogin:!0,allowNoneAuth:!0},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],currentRegistration:["$route","$q","$location","RegistrationCache",function($route,$q,$location,RegistrationCache){var q=$q.defer();return RegistrationCache.getCurrent($route.current.params.conferenceId).then(function(registration){registration.completed&&angular.isUndefined($route.current.params.pageId)?$location.path("/reviewRegistration/"+$route.current.params.conferenceId):q.resolve(registration)}),q.promise}]}}).when("/approvePayment/:paymentHash",{templateUrl:"views/c780d0ea.c780d0ea.paymentApproval.html",controller:"PaymentApprovalCtrl",authorization:{requireLogin:!0}}).when("/reviewRegistration/:conferenceId",{templateUrl:"views/d7fce121.d7fce121.reviewRegistration.html",controller:"ReviewRegistrationCtrl",authorization:{requireLogin:!0,allowNoneAuth:!0},resolve:{registration:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.emptyCache(),RegistrationCache.getCurrent($route.current.params.conferenceId).then(function(currentRegistration){return currentRegistration})}],conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}]}}).when("/preview/:conferenceId/page/:pageId?",{templateUrl:"views/23cf8f0e.23cf8f0e.registration.html",controller:"RegistrationCtrl",authorization:{requireLogin:!0},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],currentRegistration:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getCurrent($route.current.params.conferenceId)}]}}).when("/eventDashboard",{templateUrl:"views/3a067663.3a067663.eventDashboard.html",controller:"eventDashboardCtrl",authorization:{requireLogin:!0},resolve:{conferences:["$route","ConfCache",function($route,ConfCache){return ConfCache.get("")}]}}).when("/eventOverview/:conferenceId",{templateUrl:"views/aa235773.aa235773.eventOverview.html",controller:"eventOverviewCtrl",authorization:{requireLogin:!0,eventAdminPermissionLevel:"VIEW"},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId,!0)}]}}).when("/eventRegistrations/:conferenceId",{templateUrl:"views/1e161699.1e161699.eventRegistrations.html",controller:"eventRegistrationsCtrl",authorization:{requireLogin:!0,eventAdminPermissionLevel:"VIEW"},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId,!0)}],permissions:["$route","PermissionCache",function($route,PermissionCache){return PermissionCache.getForConference($route.current.params.conferenceId)}]}}).when("/eventForm/:conferenceId",{templateUrl:"views/d6de8f78.d6de8f78.eventForm.html",controller:"eventFormCtrl",authorization:{requireLogin:!0,eventAdminPermissionLevel:"UPDATE"},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId,!0)}]}}).when("/eventDetails/:conferenceId",{templateUrl:"views/0e9c633d.0e9c633d.eventDetails.html",controller:"eventDetailsCtrl",authorization:{requireLogin:!0,eventAdminPermissionLevel:"UPDATE"},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId,!0)}]}}).when("/eventUsers/:conferenceId",{templateUrl:"views/c7f80d8d.c7f80d8d.eventPermissions.html",controller:"eventPermissionsCtrl",authorization:{requireLogin:!0,eventAdminPermissionLevel:"FULL"},resolve:{conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],conferencePermissions:["$route","ConfCache",function($route,ConfCache){return ConfCache.getPermissions($route.current.params.conferenceId)}]}}).when("/activatePermission/:permissionAuthCode",{template:"{{message}}",controller:"activatePermissionCtrl",authorization:{requireLogin:!0}}).when("/auth/:token",{resolve:{redirectToIntendedRoute:["$location","$cookies","$route","$rootScope","ProfileCache",function($location,$cookies,$route,$rootScope,ProfileCache){$cookies.crsAuthProviderType="",$cookies.crsToken=$route.current.params.token,$rootScope.crsToken=$cookies.crsToken,ProfileCache.getCache(function(data){$cookies.crsAuthProviderType=data.authProviderType,angular.isDefined($cookies.regType)?($location.path($cookies.intendedRoute||"/").search("regType",$cookies.regType).replace(),delete $cookies.regType):$location.path($cookies.intendedRoute||"/").replace()})}]}}).when("/logout/",{resolve:{redirect:["$location","$cookies","$window","$http","$facebook",function($location,$cookies,$window,$http,$facebook){$http.get("auth/logout").success(function(){if(delete $cookies.crsToken,"FACEBOOK"===$cookies.crsAuthProviderType)$facebook.logout().then(function(){delete $cookies.crsAuthProviderType,$location.url("/")});else if("RELAY"===$cookies.crsAuthProviderType){delete $cookies.crsAuthProviderType;var serviceUrl=$location.absUrl().replace("logout","");$window.location.href="https://signin.cru.org/cas/logout?service="+serviceUrl}else delete $cookies.crsAuthProviderType,$location.url("/")}).error(function(data,status){alert("Logout failed: "+status)})}]}}).when("/help",{templateUrl:"views/5722ac61.5722ac61.help.html",controller:"helpCtrl"}).when("/privacy",{templateUrl:"views/d12f8bc5.d12f8bc5.privacy.html",controller:"helpCtrl"}).otherwise({redirectTo:"/"})}).run(function($rootScope,$cookies,$location,$window,ProfileCache){$rootScope.$on("$locationChangeStart",function(){_.contains($location.path(),"/preview/")?$rootScope.registerMode="preview":_.contains($location.path(),"/register/")&&($rootScope.registerMode="register")}),$rootScope.$on("$routeChangeSuccess",function(){$window.scrollTo(0,0),$window.ga&&$window.ga("send","pageview",{page:$location.path()})}),$rootScope.generateTitle=function(title){return title?title+" | Event Registration Tool":"Event Registration Tool"},$rootScope.globalGreetingName=function(){return ProfileCache.globalGreetingName()},ProfileCache.getCache()}).config(function($httpProvider){$httpProvider.interceptors.push("currentRegistrationInterceptor"),$httpProvider.interceptors.push("httpUrlInterceptor"),$httpProvider.interceptors.push("authorizationInterceptor"),$httpProvider.interceptors.push("unauthorizedInterceptor"),$httpProvider.interceptors.push("statusInterceptor")}).run(function(){!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];d.getElementById(id)||(js=d.createElement(s),js.id=id,js.src="//connect.facebook.net/en_US/all.js",fjs.parentNode.insertBefore(js,fjs))}(document,"script","facebook-jssdk")}).config(function($facebookProvider){$facebookProvider.setAppId("217890171695297")}),angular.module("confRegistrationWebApp").run(function($rootScope,$cookies,$window,$location,$timeout,loginDialog,apiUrl,ConfCache,PermissionCache,permissionConstants,modalMessage){$rootScope.$on("$routeChangeStart",function(event,next){var nextRouteRequireLogin=!!next.authorization&&next.authorization.requireLogin,nextRouteAllowsNoneAuth=!!next.authorization&&next.authorization.allowNoneAuth,nextRouteEventAdminPermissionLevel=next.authorization?next.authorization.eventAdminPermissionLevel:null,nextRouteEventId=next.params.conferenceId,crsToken=$cookies.crsToken,crsAuthProviderType=$cookies.crsAuthProviderType;if(!(!nextRouteRequireLogin||crsToken&&nextRouteAllowsNoneAuth))if(crsToken&&"NONE"!==crsAuthProviderType){if(nextRouteEventAdminPermissionLevel){var permissions=PermissionCache.getForConferenceCache(nextRouteEventId);if(!permissions){var newLocation=$location.url();return event.preventDefault(),void PermissionCache.getForConference(nextRouteEventId).then(function(){newLocation===$location.url()&&$location.path("/"),$timeout(function(){$location.path(newLocation)})})}var requiredPermissionLevel=permissionConstants[nextRouteEventAdminPermissionLevel];permissions.permissionInt<requiredPermissionLevel&&(event.preventDefault(),modalMessage.error({message:"You do not have permission to access this page. Please contact an event admin to request permission if needed.",title:"Permission Required"}))}}else/^\/auth\/.*/.test($location.url())||($cookies.intendedRoute=$location.path(),angular.isDefined(next.params.regType)&&($cookies.regType=next.params.regType)),event.preventDefault(),nextRouteAllowsNoneAuth&&nextRouteEventId?ConfCache.get(nextRouteEventId).then(function(conference){conference.requireLogin?loginDialog.show():$window.location.href=apiUrl+"auth/none/login"}):loginDialog.show(angular.isDefined(crsToken))})}),angular.module("confRegistrationWebApp").controller("AngularUiTreeConfig",function($scope,modalMessage,$sanitize,gettextCatalog){$scope.toolbarTreeConfig={accept:function(sourceNodeScope,destNodesScope){return sourceNodeScope.$treeScope===destNodesScope.$treeScope},beforeDrop:function(event){if(event.source.nodeScope.$$apply=!1,event.dest.nodesScope.$nodeScope){var block=event.source.nodeScope.$modelValue,pageId=event.dest.nodesScope.$nodeScope.$modelValue.id;$scope.insertBlock(block.id,pageId,event.dest.index,block.defaultTitle)}}},$scope.pageTreeConfig={accept:function(sourceNodeScope,destNodesScope){var sourceType=sourceNodeScope.$modelValue.pageId||sourceNodeScope.$modelValue.defaultTitle?"block":"page",destType=destNodesScope.$element.attr("drop-type");return sourceType===destType},beforeDrop:function(event){var block=event.source.nodeScope.block;if(!angular.isUndefined(block)){var conference=$scope.$parent.conference,positionArray=[];conference.registrationPages.forEach(function(page,pageIndex){page.blocks.forEach(function(block,blockIndex){positionArray[block.id]={page:pageIndex,block:blockIndex,title:block.title}})});var sourcePageId=event.source.nodesScope.$nodeScope.$modelValue.id,sourcePageIndex=_.findIndex(conference.registrationPages,{id:sourcePageId}),destPageId=event.dest.nodesScope.$nodeScope.$modelValue.id,destPageIndex=_.findIndex(conference.registrationPages,{id:destPageId}),rulesViolated=[];angular.forEach(block.rules,function(rule){var parentBlockLocation=positionArray[rule.parentBlockId];(parentBlockLocation.page>destPageIndex||parentBlockLocation.page===destPageIndex&&parentBlockLocation.block>=event.dest.index)&&rulesViolated.push("<strong>"+$sanitize(block.title)+"</strong> "+gettextCatalog.getString("must be below")+" <strong>"+$sanitize(parentBlockLocation.title)+"</strong>.")});var allRules=_.flatten(_.flatten(conference.registrationPages,"blocks"),"rules"),rulesLinkedToBlock=_.where(allRules,{parentBlockId:block.id});angular.forEach(rulesLinkedToBlock,function(rule){var childBlockLocation=positionArray[rule.blockId];(childBlockLocation.page<destPageIndex||childBlockLocation.page===destPageIndex&&childBlockLocation.block<event.dest.index||childBlockLocation.page===destPageIndex&&sourcePageIndex===destPageIndex&&childBlockLocation.block===event.dest.index)&&rulesViolated.push("<strong>"+$sanitize(childBlockLocation.title)+"</strong> "+gettextCatalog.getString("must be below")+" <strong>"+$sanitize(block.title)+"</strong>.")}),rulesViolated.length&&(event.source.nodeScope.$$apply=!1,modalMessage.error({title:gettextCatalog.getString("Error Moving Question"),message:"<p><strong>"+gettextCatalog.getString("Rule violations:")+"</strong></p><ul><li>"+rulesViolated.join("</li><li>")+"</li></ul>"}))}}}}),angular.module("confRegistrationWebApp").controller("AccessEventCtrl",function($scope,$http,$modalInstance,modalMessage){$scope.eventSearchHistoric=!0,$scope.close=function(){$modalInstance.dismiss()},$scope.submit=function(conference,reasonForRequest){$http({method:"POST",url:"conferences/"+conference.id+"/permissions",data:{conferenceId:conference.id,reasonForRequest:reasonForRequest,permissionLevel:"REQUESTED"}}).success(function(){$modalInstance.close()}).error(function(data){modalMessage.error(data.error?data.error.message:"An error has occurred")})},$scope.eventSearch=function(val){return $http.get("conferences",{params:{conferenceName:val,historic:$scope.eventSearchHistoric}}).then(function(response){return response.data})},$scope.selectEvent=function(item){$scope.selectedEvent=item}}),angular.module("confRegistrationWebApp").controller("activatePermissionCtrl",function($scope,$route,$http,$location,$timeout,gettextCatalog){var permissionAuthCode=$route.current.params.permissionAuthCode;$scope.message=gettextCatalog.getString("Verifying Auth Code..."),$http({method:"PUT",url:"permissions/"+permissionAuthCode+"/accept"}).success(function(){$scope.message=gettextCatalog.getString("Success! Permission has been granted. Redirecting now..."),$timeout(function(){$location.path("/eventDashboard")},2e3)}).error(function(data,status){404===status?$scope.message=gettextCatalog.getString("Error: Permission auth code was not found."):403===status?$scope.message=gettextCatalog.getString("Error: Permission auth code has already been used or is more than 2 months old."):$scope.message="An error has occurred while attempting to accept this auth code. "+data})}),angular.module("confRegistrationWebApp").controller("cloneEventCtrl",function($scope,defaultValue,permissions,permissionConstants){$scope.name=defaultValue,$scope.permissionToClone=permissions.permissionInt>=permissionConstants.FULL}),angular.module("confRegistrationWebApp").controller("editRegistrationModalCtrl",function($scope,$modalInstance,modalMessage,$http,$q,conference,registrantId,registration,validateRegistrant){$scope.conference=angular.copy(conference),$scope.registration=angular.copy(registration),$scope.adminEditRegistrant=_.find($scope.registration.registrants,{id:registrantId});var originalRegistrantObject=angular.copy($scope.adminEditRegistrant);$scope.saving=!1,$scope.close=function(){$modalInstance.dismiss()},$scope.blockIsVisible=function(block,registrant){return"paragraphContent"!==block.type&&validateRegistrant.blockVisible(block,registrant,!0)},$scope.submit=function(setRegistrationAsCompleted){if($scope.saving=!0,setRegistrationAsCompleted)modalMessage.confirm({title:"Mark as completed?",question:"Are you sure you want to mark this registration as completed?"}).then(function(){$scope.registration.completed=!0,saveAllAnswers()},function(){$scope.saving=!1});else if(originalRegistrantObject.registrantTypeId!==$scope.adminEditRegistrant.registrantTypeId)saveAllAnswers();else{var answersUpdatePromises=[];angular.forEach($scope.adminEditRegistrant.answers,function(a){angular.equals(a,_.find(originalRegistrantObject.answers,{id:a.id}))||answersUpdatePromises.push($http.put("answers/"+a.id,a))}),$q.all(answersUpdatePromises).then(getRegistrantAndClose)}};var saveAllAnswers=function(){$http.put("registrations/"+originalRegistrantObject.registrationId,$scope.registration).success(getRegistrantAndClose).error(function(data){$scope.saving=!1,modalMessage.error(data.error?data.error.message:"An error occurred while saving this registration.")})},getRegistrantAndClose=function(){$http.get("registrations/"+originalRegistrantObject.registrationId).success(function(registration){$modalInstance.close(registration)})}}),angular.module("confRegistrationWebApp").controller("eventDashboardCtrl",function($rootScope,$scope,ConfCache,conferences,$modal,modalMessage,$location,$http){$rootScope.globalPage={type:"admin",mainClass:"container event-dashboard",bodyClass:"",title:"My Dashboard",confId:0,footer:!0},$scope.eventBoxView="views/components/67f1aa6b.67f1aa6b.eventDashboardEvent.html",$scope.conferences=_.map(angular.copy(conferences),function(c){return c.lastAccess=localStorage.getItem("lastAccess:"+c.id),c}),$scope.filterRecentEvents=function(c){return angular.isUndefined(_.find($scope.recentEvents,{id:c.id}))},$scope.createEvent=function(){$modal.open({templateUrl:"views/modals/08f98fe0.08f98fe0.createEvent.html"}).result.then(function(conferenceName){conferenceName&&ConfCache.create(conferenceName).success(function(conference){$location.path("/eventDetails/"+conference.id)})})},$scope.requestAccess=function(){$modal.open({templateUrl:"views/modals/d0aaf4ee.d0aaf4ee.accessEvent.html",controller:"AccessEventCtrl"})},$scope.eventDisabled=function(eventData){return eventData.archived||"REQUESTED"===eventData.loggedInUserPermissionLevel},$scope.goToEventPage=function(page,eventId){var eventData=_.find($scope.conferences,{id:eventId});$scope.eventDisabled(eventData)||$location.path("/"+page+"/"+eventId)},$scope.restoreEvent=function(eventId){$rootScope.loadingMsg="Restoring Event",ConfCache.get(eventId).then(function(eventData){eventData.archived=!1,$http({method:"PUT",url:"conferences/"+eventId,data:eventData}).success(function(){ConfCache.empty(),$location.path("/eventOverview/"+eventData.id)}).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while attempting to restore event.")}).finally(function(){$rootScope.loadingMsg=""})})},$scope.cloneEvent=function(conferenceToCloneId){var conferenceToClone=_.find(conferences,{id:conferenceToCloneId});$modal.open({templateUrl:"views/modals/ab498843.ab498843.cloneEvent.html",controller:"cloneEventCtrl",resolve:{defaultValue:function(){return conferenceToClone.name+" (clone)"},permissions:["PermissionCache",function(PermissionCache){return PermissionCache.getForConference(conferenceToCloneId)}]}}).result.then(function(data){data.name&&$http.post("conferences/"+conferenceToCloneId+"/clone",null,{params:{name:data.name,includePermissions:data.includePermissions}}).success(function(newEvent){ConfCache.empty(),$location.path("/eventDetails/"+newEvent.id)}).error(function(data){modalMessage.error(data.error?data.error.message:"An error has occurred while attempting to clone.")})})}}),angular.module("confRegistrationWebApp").controller("eventDetailsCtrl",function($rootScope,$scope,$http,$sce,$timeout,$window,$modal,modalMessage,$filter,$location,conference,ConfCache,uuid){$rootScope.globalPage={type:"admin",mainClass:"container event-details",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.tabs=[{id:"eventInfo",name:"Event Information",view:"views/eventDetails/a64073fd.a64073fd.eventInformation.html"},{id:"regOptions",name:"Registration Options",view:"views/eventDetails/f96b3856.f96b3856.regOptions.html"},{id:"regTypes",name:"Registrant Types",view:"views/eventDetails/8927c68e.8927c68e.regTypes.html"},{id:"paymentOptions",name:"Payment Options",view:"views/eventDetails/60f50a43.60f50a43.paymentOptions.html"},{id:"promotions",name:"Promotions",view:"views/eventDetails/14e762a2.14e762a2.promotions.html"},{id:"contactInfo",name:"Contact Information",view:"views/eventDetails/928fe160.928fe160.contactInfo.html"}],$scope.changeTab=function(tab){$scope.activeTab=tab},$scope.changeTab($scope.tabs[0]),$scope.paymentGateways=[{id:"AUTHORIZE_NET",name:"Authorize.Net"}],$scope.conference=angular.copy(conference),$scope.$on("$locationChangeStart",function(event,newLocation){angular.equals(conference,$scope.conference)||(event.preventDefault(),modalMessage.confirm({title:"Warning: Unsaved Changes",question:"You have some unsaved changes on this page, are you sure you want to leave? Your changes will be lost.",yesString:"Discard changes",noString:"Stay on this page",normalSize:!0}).then(function(){conference=angular.copy($scope.conference),$location.url($location.url(newLocation).hash())}))}),$scope.addPromotion=function(){$scope.conference.promotions.push({id:uuid(),applyToAllRegistrants:!0,registrantTypeIds:_.pluck($scope.conference.registrantTypes,"id"),activationDate:$scope.conference.registrationStartTime,deactivationDate:$scope.conference.registrationEndTime})},$scope.promotionRegistrantTypeToggle=function(registrantTypes,id){registrantTypes.indexOf(id)===-1?registrantTypes.push(id):registrantTypes.splice(registrantTypes.indexOf(id),1)},$scope.addRegType=function(){var modalInstance=$modal.open({templateUrl:"views/modals/c62e69bf.c62e69bf.addRegistrantType.html",controller:function($scope,$modalInstance,registrantTypes){$scope.types=registrantTypes.data,$scope.selectType=function(type){$modalInstance.close(type)}},resolve:{registrantTypes:function(){return $http.get("registranttypes",{cache:!0})}}});return modalInstance.result.then(function(type){type.id=uuid(),$scope.conference.registrantTypes.push(type)}),modalInstance},$scope.deleteRegType=function(id){$scope.conference.registrantTypes.length>1?_.remove($scope.conference.registrantTypes,function(type){return type.id===id}):($scope.notify={class:"alert-danger",message:$sce.trustAsHtml("You must have at least one registrant type per event.")},$timeout(function(){$scope.notify={}},3500))},$scope.addEarlyRegistrationDiscount=function(type){type.earlyRegistrationDiscounts.push({id:uuid(),enabled:!0})},$scope.saveEvent=function(){var validationErrors=[],urlPattern=new RegExp(/[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/gi),httpPattern=new RegExp(/^https?:\/\//gi);if(_.isEmpty($scope.conference.contactWebsite)||(urlPattern.test($scope.conference.contactWebsite)?httpPattern.test($scope.conference.contactWebsite)||($scope.conference.contactWebsite="http://"+$scope.conference.contactWebsite):validationErrors.push("Please enter a valid contact website.")),_.isEmpty($scope.conference.name)&&validationErrors.push("Please enter an event name."),$scope.conference.abbreviation&&$scope.conference.abbreviation.length>10&&validationErrors.push("Event abbreviation must be no longer than 10 characters."),$scope.conference.eventStartTime>$scope.conference.eventEndTime&&validationErrors.push("Event end date/time must be after event start date/time."),$scope.conference.registrationStartTime>$scope.conference.registrationEndTime&&validationErrors.push("Registration end date/time must be after registration start date/time."),$scope.conference.allowEditRegistrationAfterComplete&&!$scope.conference.requireLogin&&validationErrors.push("You must require sign in if allowing users to edit their registration after it's complete."),_.isEmpty($scope.conference.registrationCompleteRedirect)||(urlPattern.lastIndex=0,httpPattern.lastIndex=0,urlPattern.test($scope.conference.registrationCompleteRedirect)?httpPattern.test($scope.conference.registrationCompleteRedirect)||($scope.conference.registrationCompleteRedirect="http://"+$scope.conference.registrationCompleteRedirect):validationErrors.push("Please enter a valid completion redirect website.")),angular.forEach($scope.conference.promotions,function(p,index){_.isEmpty(p.code)?validationErrors.push("Please enter a code for promotion "+(index+1)+"."):((p.code.length<5||p.code.length>20)&&validationErrors.push("Code for promotion "+(index+1)+" must be greater than 5 characters and less than 20."),/[^a-zA-Z0-9]/.test(p.code)&&validationErrors.push("Code for promotion "+(index+1)+" must only contain letters and/or numbers.")),(!p.amount||Number(p.amount)<=0)&&validationErrors.push("Please enter a discount amount greater than 0 for promotion "+(index+1)+".")}),angular.forEach($scope.conference.registrantTypes,function(t){_.isEmpty(t.name)&&validationErrors.push("Please enter a name for all Registrant types.")}),angular.forEach($scope.conference.registrantTypes,function(t){t.cost=Number(t.cost),(_.isNaN(t.cost)||t.cost<0)&&validationErrors.push("Event cost for '"+t.name+"' must be a positive number.")}),_.isEmpty($scope.conference.paymentGatewayId)&&_.some($scope.conference.registrantTypes,"acceptCreditCards")&&validationErrors.push('Please enter a credit card Account ID and Key under the "Payment Options" tab.'),angular.forEach($scope.conference.registrantTypes,function(t){$scope.conference.requireLogin&&$scope.anyPaymentMethodAccepted(t)&&String(t.minimumDeposit).length>0&&!_.isNull(t.minimumDeposit)?(t.minimumDeposit=Number(t.minimumDeposit),t.minimumDeposit>t.cost&&validationErrors.push("The minimum deposit for '"+t.name+"' must be less than the cost.")):t.minimumDeposit=null}),angular.forEach($scope.conference.registrantTypes,function(t){angular.forEach(t.earlyRegistrationDiscounts,function(d,index){d.enabled&&(d.amountOfDiscount=Number(d.amountOfDiscount),d.amountOfDiscount<=0&&validationErrors.push("Early registration discount "+(index+1)+" for '"+t.name+"' must be a positive number."),d.deadline||validationErrors.push("Early registration discount "+(index+1)+" for '"+t.name+"' must include a valid date and time."))})}),$window.scrollTo(0,0),validationErrors.length>0){var errorMsg="<strong>Error!</strong> Please fix the following issues:<ul>";angular.forEach(validationErrors,function(e){errorMsg=errorMsg+"<li>"+e+"</li>"}),errorMsg+="</ul>",$scope.notify={class:"alert-danger",message:$sce.trustAsHtml(errorMsg)}}else $scope.notify={class:"alert-warning",message:$sce.trustAsHtml("Saving...")},$http({method:"PUT",url:"conferences/"+conference.id,data:$scope.conference}).success(function(){$scope.notify={class:"alert-success",message:$sce.trustAsHtml("<strong>Saved!</strong> Your event details have been updated.")},conference=angular.copy($scope.conference),ConfCache.empty()}).error(function(data){$scope.notify={class:"alert-danger",message:$sce.trustAsHtml("<strong>Error:</strong> "+(data.error?data.error.message:"Details could not be saved."))}})},$scope.anyPaymentMethodAccepted=function(type){return type.acceptCreditCards||type.acceptChecks||type.acceptTransfers||type.acceptScholarships},$scope.previewEmail=function(reg){var cost=$filter("currency")(reg.cost,"$"),eventStartTime=moment(conference.eventStartTime).format("dddd, MMMM D YYYY, h:mm a"),eventEndTime=moment(conference.eventEndTime).format("dddd, MMMM D YYYY, h:mm a");modalMessage.info({title:"Email Preview",message:"<p>Hello "+$rootScope.globalGreetingName()+"!</p><p>You are registered for "+$scope.conference.name+".</p><p><strong>Start Time:</strong> "+eventStartTime+"<br><strong>End Time:</strong> "+eventEndTime+"</p><p><strong>Total Cost:</strong> "+cost+"<br><strong>Total Amount Paid:</strong> "+cost+"<br><strong>Remaining Balance:</strong> $0.00</p>"+reg.customConfirmationEmailText,okString:"Close"})},$scope.disableField=function(field,defaultTypeKey){var fields={groupSubRegistrantType:["SPOUSE","CHILD"]};return _.contains(fields[field],defaultTypeKey)}}),angular.module("confRegistrationWebApp").controller("eventFormCtrl",function($rootScope,$scope,$modal,modalMessage,$location,$anchorScroll,$sce,$sanitize,$http,$timeout,conference,GrowlService,ConfCache,uuid){$rootScope.globalPage={type:"admin",mainClass:"event-questions",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.conference=conference,$scope.$watch("conference",function(newObject,oldObject){angular.isDefined(newObject)&&angular.isDefined(oldObject)&&!_.isEqual(newObject,oldObject)&&saveForm()},!0);var formSavingTimeout,formSavingNotifyTimeout,formSaving=!1,saveForm=function(){return formSaving?($timeout.cancel(formSavingTimeout),void(formSavingTimeout=$timeout(function(){saveForm()},600))):($timeout.cancel(formSavingTimeout),formSaving=!0,void $http({method:"PUT",url:"conferences/"+conference.id,data:$scope.conference}).success(function(){formSaving=!1,$scope.notify={class:"alert-success",message:$sce.trustAsHtml("<strong>Saved!</strong> Your form has been saved.")},angular.isDefined($scope.conference)&&ConfCache.update(conference.id,$scope.conference),$timeout.cancel(formSavingNotifyTimeout),formSavingNotifyTimeout=$timeout(function(){$scope.notify={}},2e3)}).error(function(data){formSaving=!1,$scope.notify={class:"alert-danger",message:$sce.trustAsHtml("<strong>Error</strong> "+(data.error?data.error.message:"Update failed."))}}))};$scope.previewForm=function(){$location.path("/preview/"+conference.id+"/page/")},$scope.deletePage=function(pageId,growl){var delPageIndex=_.findIndex($scope.conference.registrationPages,{id:pageId}),page=$scope.conference.registrationPages[delPageIndex];if(_.some(page.blocks,"profileType",["EMAIL","NAME"]))return void modalMessage.error({title:"Error Deleting Page",message:"This page contains required profile questions and cannot be deleted."});var blocksOnPage=_.where(_.flatten($scope.conference.registrationPages,"blocks"),{pageId:page.id}),blocksNotOnPage=_.where(_.flatten($scope.conference.registrationPages,"blocks"),function(block){return block.pageId!==page.id}),rulesToBeRemoved=_.where(_.flatten(blocksNotOnPage,"rules"),function(rule){return _.contains(_.pluck(blocksOnPage,"id"),rule.parentBlockId)}),confirmMessage="<p>Are you sure you want to delete <strong>"+page.title+"</strong>?"+(page.blocks.length?" All questions on this page will be deleted.</p>":"</p>");rulesToBeRemoved.length&&(confirmMessage+="<p>The following rules will also be deleted:</p><ul>",angular.forEach(rulesToBeRemoved,function(rule){var parentBlock=_.find(blocksOnPage,{id:rule.parentBlockId}),block=_.find(blocksNotOnPage,{id:rule.blockId});confirmMessage+="<li><strong>"+$sanitize(parentBlock.title)+"</strong> "+rule.operator+" <strong>"+rule.value+"</strong> on <strong>"+$sanitize(block.title)+"</strong>.</li>"}),confirmMessage+="</ul>"),modalMessage.confirm({title:"Delete Page",question:confirmMessage,normalSize:!0}).then(function(){if(growl){var page=_.find($scope.conference.registrationPages,{id:pageId}),message='Page "'+page.title+'" has been deleted.';GrowlService.growl($scope,"conference",$scope.conference,message)}rulesToBeRemoved.length&&angular.forEach($scope.conference.registrationPages,function(page,pageIndex){angular.forEach(page.blocks,function(block,blockIndex){angular.forEach(block.rules,function(rule,ruleIndex){_.contains(_.pluck(rulesToBeRemoved,"id"),rule.id)&&$scope.conference.registrationPages[pageIndex].blocks[blockIndex].rules.splice(ruleIndex,1)})})}),$scope.conference.registrationPages.splice(delPageIndex,1)})};var makePositionArray=function(){var tempPositionArray=[];return $scope.conference.registrationPages.forEach(function(page,pageIndex){page.blocks.forEach(function(block,blockIndex){tempPositionArray[block.id]={page:pageIndex,block:blockIndex}})}),tempPositionArray};$scope.copyBlock=function(blockId){var tempPositionArray=makePositionArray(),origPageIndex=tempPositionArray[blockId].page,newBlock=angular.copy($scope.conference.registrationPages[origPageIndex].blocks[tempPositionArray[blockId].block]),newPosition=tempPositionArray[blockId].block+1;newBlock.id=uuid(),newBlock.profileType=null,newBlock.position=newPosition,newBlock.title=newBlock.title+" (copy)",angular.forEach(newBlock.rules,function(r){r.id=uuid(),r.blockId=newBlock.id}),$scope.conference.registrationPages[origPageIndex].blocks.splice(newPosition,0,newBlock)},$scope.insertBlock=function(blockType,newPage,newPosition,title,defaultProfile){var newPageIndex=_.findIndex($scope.conference.registrationPages,{id:newPage}),profileType=null;if(angular.isDefined(defaultProfile)){var profileCount=0;$scope.conference.registrationPages.forEach(function(page){page.blocks.forEach(function(block){defaultProfile===block.profileType&&profileCount++})}),0===profileCount&&(profileType=defaultProfile)}var newBlock={id:uuid(),content:"",pageId:newPage,required:!1,title:title,type:blockType,profileType:profileType,registrantTypes:[],rules:[]};$scope.conference.registrationPages[newPageIndex].blocks.splice(newPosition,0,newBlock)},$scope.deleteBlock=function(blockId,growl){
var allBlocks=_.flatten($scope.conference.registrationPages,"blocks"),childRules=_.filter(_.flatten(allBlocks,"rules"),{parentBlockId:blockId});if(0!==childRules.length){var questions=_(childRules).map(function(rule){var block=_.find(allBlocks,{id:rule.blockId});return"<li>"+$sanitize(block.title)+"</li>"}).unique().value(),pluralize="question has";return questions.length>1&&(pluralize="questions have"),void modalMessage.error({title:"Error Removing Question",message:"The following "+pluralize+" at least one rule that depends on this question:<ul>"+questions.join("")+"</ul>Please remove the rules that depend on this question and then try deleting it again."})}if(growl){var t=makePositionArray(),block=$scope.conference.registrationPages[t[blockId].page].blocks[t[blockId].block],message='"'+block.title+'" has been deleted.';GrowlService.growl($scope,"conference",$scope.conference,message)}var tempPositionArray=makePositionArray();_.remove($scope.conference.registrationPages[tempPositionArray[blockId].page].blocks,{id:blockId})},$scope.addNewPage=function(){$scope.conference.registrationPages.push({id:uuid(),conferenceId:$scope.conference.id,position:0,title:"Page "+($scope.conference.registrationPages.length+1),blocks:[]}),$location.hash("page"+$scope.conference.registrationPages.length),$anchorScroll.yOffset=250,$anchorScroll()};var hiddenPages=[];$scope.togglePage=function(id){_.contains(hiddenPages,id)?_.remove(hiddenPages,function(p){return p===id}):hiddenPages.push(id)},$scope.isPageHidden=function(id){return _.contains(hiddenPages,id)}}),angular.module("confRegistrationWebApp").controller("eventOverviewCtrl",function($rootScope,$scope,$location,$route,ConfCache,conference){$rootScope.globalPage={type:"admin",mainClass:"container event-overview",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.conference=conference;var port="";80!==$location.$$port&&443!==$location.$$port&&(port=":"+$location.$$port);var baseUrl=$location.$$protocol+"://"+$location.$$host+port+"/#/register/"+conference.id;$scope.registrationUrl={},$scope.registrationUrl[0]=baseUrl,angular.forEach(conference.registrantTypes,function(t){$scope.registrationUrl[t.id]=baseUrl+"?regType="+t.id})}),angular.module("confRegistrationWebApp").controller("eventPermissionsCtrl",function($rootScope,$scope,$http,$route,conference,conferencePermissions,modalMessage){$rootScope.globalPage={type:"admin",mainClass:"container event-users",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.conference=conference,$scope.currentPermissions=conferencePermissions,$scope.updatePermission=function(id){$http({method:"PUT",url:"permissions/"+id,data:_.find($scope.currentPermissions,{id:id})}).success(function(){$scope.notify={class:"alert-success",message:"User updated."},_.find($scope.currentPermissions,{id:id}).timestamp=new Date}).error(function(data){modalMessage.error(data.error?data.error.message:"User could not be updated."),$route.reload()})},$scope.addPermission=function(addPermissionsEmail,addPermissionsLevel){var postData={conferenceId:conference.id,emailAddress:addPermissionsEmail,permissionLevel:addPermissionsLevel};$http({method:"POST",url:"conferences/"+conference.id+"/permissions",data:postData}).success(function(data){$scope.currentPermissions.push(data),$scope.addPermissionsEmail="",$scope.addPermissionsLevel="",$scope.notify={class:"alert-success",message:"Email invite sent."}}).error(function(data){modalMessage.error(data.error?data.error.message:"User could not be added.")})},$scope.deletePermission=function(id){modalMessage.confirm({title:"Remove User?",question:"Are you sure you want to remove this user?"}).then(function(){$http({method:"DELETE",url:"permissions/"+id}).success(function(){_.remove($scope.currentPermissions,{id:id}),$scope.notify={class:"alert-success",message:"User removed."}}).error(function(data){modalMessage.error(data.error?data.error.message:"User could not be removed.")})})},$scope.resendEmail=function(permission){$http({method:"DELETE",url:"permissions/"+permission.id}).success(function(){_.remove($scope.currentPermissions,{id:permission.id}),$scope.addPermission(permission.emailAddress,permission.permissionLevel)})}}),angular.module("confRegistrationWebApp").controller("eventRegistrationsCtrl",function($rootScope,$scope,$modal,modalMessage,$http,$window,RegistrationCache,conference,permissions,permissionConstants,validateRegistrant){function hasPermission(){return!(permissions.permissionInt<permissionConstants.CHECK_IN)||(modalMessage.error({title:"Permissions Error",message:"You do not have permission to perform this action. Please contact an event administrator to request permission."}),!1)}$rootScope.globalPage={type:"admin",mainClass:"event-registrations",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.paidPopoverTemplateUrl="views/components/938cbd89.938cbd89.registrationsPaidPopover.html",$scope.conference=conference,$scope.blocks=[],$scope.queryParameters={block:[],page:1,limit:20,orderBy:"last_name",order:"ASC",filter:"",filterPayment:"",filterRegType:"",includeCheckedin:"yes",includeWithdrawn:"yes",includeIncomplete:"yes"},$scope.meta={totalPages:0},$scope.reversesort=!1,$scope.visibleFilterRegistrantTypes=_.sortBy(angular.copy(conference.registrantTypes).concat({id:"",name:"-Any-"}),"name");var expandedRegistrations={};$scope.$watch("queryParameters",function(q,oldQ){return q.page>1&&q.page===oldQ.page?void($scope.queryParameters.page=1):(q.page!==oldQ.page&&$window.scrollTo(0,0),void $scope.refreshRegistrations())},!0),angular.forEach(conference.registrationPages,function(page){angular.forEach(page.blocks,function(block){"paragraphContent"!==block.type&&$scope.blocks.push(angular.copy(block))})});var visibleBlocks=localStorage.getItem("visibleBlocks:"+conference.id);_.isNull(visibleBlocks)||(visibleBlocks=JSON.parse(visibleBlocks),$scope.queryParameters.block=visibleBlocks,angular.forEach(visibleBlocks,function(blockId){var block=_.find($scope.blocks,{id:blockId});angular.isDefined(block)&&(block.visible=!0)})),$scope.toggleColumn=function(block){$scope.blocks[block].visible=!$scope.blocks[block].visible,visibleBlocks=_.pluck(_.where($scope.blocks,{visible:!0}),"id"),localStorage.setItem("visibleBlocks:"+conference.id,JSON.stringify(visibleBlocks)),$scope.queryParameters.block=visibleBlocks};var throttleFilter=_.debounce(function(){$scope.$apply(function(){$scope.queryParameters.filter=$scope.strFilter})},500);$scope.$watch("strFilter",function(strFilter){angular.isDefined(strFilter)&&throttleFilter()}),$scope.resetStrFilter=function(){$scope.strFilter=""},$scope.refreshRegistrations=function(){RegistrationCache.getAllForConference(conference.id,$scope.queryParameters).then(function(data){$scope.meta=data.meta,$scope.registrations=data.registrations,$scope.registrants=_.flatten(data.registrations,"registrants"),expandedRegistrations={}},function(){$scope.registrations=[],$scope.registrants=[]})},$scope.blockIsVisible=function(block,registrant){return validateRegistrant.blockVisible(block,registrant,!0)};var findAnswer=function(registration,blockId){return _.find(registration.answers,function(answer){return angular.equals(answer.blockId,blockId)})};$scope.answerSort=function(registrant){var orderBy=$scope.queryParameters.orderBy;if(angular.isUndefined(orderBy))return 0;if("completed_timestamp"===orderBy)return $scope.getRegistration(registrant.registrationId).completedTimestamp;if("created_timestamp"===orderBy)return registrant.createdTimestamp;if("registrant_type_id"===orderBy)return registrant.registrantTypeId;if("first_name"===orderBy)return registrant.firstName;if("last_name"===orderBy)return registrant.lastName;if("email"===orderBy)return registrant.email;if("checked_in_timestamp"===orderBy)return registrant.checkedInTimestamp;var answerValue=findAnswer(registrant,orderBy);if(angular.isUndefined(answerValue))return"";if(answerValue=answerValue.value,_.isObject(answerValue)){var blockType=_.find($scope.blocks,{id:orderBy}).type;return"checkboxQuestion"===blockType?_.keys(_.pick(answerValue,function(val){return val})).join():_.values(answerValue).join()}return answerValue},$scope.setOrder=function(order){order===$scope.queryParameters.orderBy?$scope.reversesort=!$scope.reversesort:$scope.reversesort=!1,$scope.queryParameters.orderBy=order,$scope.queryParameters.order=$scope.reversesort?"DESC":"ASC"},$scope.viewPayments=function(registrationId){$http.get("registrations/"+registrationId).success(function(registration){var paymentModalOptions={templateUrl:"views/modals/1e1afc5b.1e1afc5b.paymentsModal.html",controller:"paymentModal",size:"lg",backdrop:"static",resolve:{registration:function(){return registration},conference:function(){return conference},permissions:function(){return permissions}}};$modal.open(paymentModalOptions).result.then(function(updatedRegistration){var localUpdatedRegistrationIndex=_.findIndex($scope.registrations,{id:updatedRegistration.id});$scope.registrations[localUpdatedRegistrationIndex]=updatedRegistration})}).error(function(){modalMessage.error("Error: registration data could be be retrieved.")})},$scope.remainingBalance=function(registrationId){var registration=_.find($scope.registrations,{id:registrationId});return registration.remainingBalance},$scope.expandRegistration=function(r){"open"===expandedRegistrations[r]?delete expandedRegistrations[r]:(expandedRegistrations[r]="loading",$http.get("registrants/"+r).success(function(registrantData){expandedRegistrations[r]="open";var index=_.findIndex($scope.registrants,{id:registrantData.id});$scope.registrants[index]=registrantData,index=_.findIndex($scope.registrations,{id:registrantData.registrationId});var registrantIndex=_.findIndex($scope.registrations[index].registrants,{id:registrantData.id});$scope.registrations[index].registrants[registrantIndex]=registrantData}).error(function(){modalMessage.error("Error: registrant data could not be retrieved."),delete expandedRegistrations[r]}))},$scope.expandedStatus=function(r){return expandedRegistrations[r]},$scope.editRegistrant=function(r){hasPermission()&&$http.get("registrations/"+r.registrationId).success(function(registration){var editRegistrationDialogOptions={templateUrl:"views/modals/7282e551.7282e551.editRegistration.html",controller:"editRegistrationModalCtrl",resolve:{registrantId:function(){return r.id},registration:function(){return registration},conference:function(){return conference}}};$modal.open(editRegistrationDialogOptions).result.then(function(registration){var index=_.findIndex($scope.registrations,{id:registration.id});$scope.registrations[index]=registration,r=_.find(registration.registrants,{id:r.id}),index=_.findIndex($scope.registrants,{id:r.id}),$scope.registrants[index]=r})}).error(function(){modalMessage.error("Error: registrant data could not be retrieved."),delete expandedRegistrations[r]})},$scope.export=function(){$modal.open({templateUrl:"views/modals/672a61e2.672a61e2.export.html",controller:"exportDataModal",resolve:{conference:function(){return $scope.conference}}})},$scope.registerUser=function(){hasPermission()&&$modal.open({templateUrl:"views/modals/037628ba.037628ba.manualRegistration.html",controller:"registrationModal",resolve:{conference:function(){return conference}}})},$scope.getRegistration=function(id){return _.find($scope.registrations,{id:id})},$scope.getRegistrantType=function(id){return _.find(conference.registrantTypes,{id:id})},$scope.withdrawRegistrant=function(registrant,value){hasPermission()&&(registrant.withdrawn=value,value&&(registrant.withdrawnTimestamp=new Date),$rootScope.loadingMsg=(value?"Withdrawing ":"Reinstating ")+registrant.firstName,$http.put("registrants/"+registrant.id,registrant).error(function(data){registrant.withdrawn=!value,modalMessage.error(data.error?data.error.message:"An error occurred while withdrawing this registrant.")}).finally(function(){$rootScope.loadingMsg=""}))},$scope.checkInRegistrant=function(registrant,value){if(hasPermission()){var originalValue=angular.copy(registrant.checkedInTimestamp);registrant.checkedInTimestamp=value?(new Date).toJSON():null,$rootScope.loadingMsg=(value?"Checking in ":"Removing check-in for ")+registrant.firstName,$http.put("registrants/"+registrant.id,registrant).error(function(data){registrant.checkedInTimestamp=originalValue,modalMessage.error(data.error?data.error.message:"An error occurred while checking in this registrant.")}).finally(function(){$rootScope.loadingMsg=""})}},$scope.deleteRegistrant=function(registrant){hasPermission()&&modalMessage.confirm({title:"Delete Registration",question:"Are you sure you want to delete this registration?<br>There is no recovering the data once deleted.",yesString:"Delete",noString:"Cancel",normalSize:!0}).then(function(){$http.get("registrations/"+registrant.registrationId).success(function(registration){var url="registrations/"+registration.id;registration.registrants.length>1&&(url="registrants/"+registrant.id),$http({method:"DELETE",url:url}).success(function(){_.remove($scope.registrants,function(r){return r.id===registrant.id})}).error(function(data){modalMessage.error({message:data.error?data.error.message:"An error has occurred while deleting this registration."})})})})}}),angular.module("confRegistrationWebApp").controller("exportDataModal",function($scope,$modalInstance,$cookies,conference,apiUrl){$scope.conference=conference,$scope.apiUrl=apiUrl,$scope.authToken=$cookies.crsToken,$scope.close=function(){$modalInstance.dismiss()}}),angular.module("confRegistrationWebApp").controller("helpCtrl",function($rootScope){$rootScope.globalPage={type:"landing",mainClass:"container",bodyClass:"",title:"",confId:0,footer:!0}}),angular.module("confRegistrationWebApp").controller("landingCtrl",function($rootScope,$scope,$http,$cookies,$location){$rootScope.globalPage={type:"landing",mainClass:"dashboard",bodyClass:"",title:"",confId:0,footer:!0};var jumboImgs=[{url:"/img/landing/big-break.jpg",position:"0 85%"},{url:"/img/landing/311.jpg",position:"0 10%"},{url:"/img/landing/187.jpg",position:"0 60%"}];$scope.jumboImg=jumboImgs[_.random(0,jumboImgs.length-1)],$scope.eventSearch=_.throttle(function(val){val&&(val.length<2||$http.get("conferences",{params:{conferenceName:val}}).then(function(response){$scope.eventFilters={locationName:"",date:""},$scope.searchComplete=val,$scope.searchResults=response.data}))},500,{leading:!1}),$scope.dateFilter=function(event){var eventStartTime=moment.tz(event.eventStartTime,event.eventTimezone);switch($scope.eventFilters.date){case"":return!0;case"This Week":var mondayMidnight=moment().startOf("week"),saturdayMidnight=moment().startOf("week").add(6,"days");return eventStartTime>=mondayMidnight&&eventStartTime<=saturdayMidnight;case"Next Week":var nextMonday=moment().startOf("week").add(8,"days"),nextSundayMidnight=moment().startOf("week").add(14,"days");return eventStartTime>=nextMonday&&eventStartTime<=nextSundayMidnight;case"This Month":return eventStartTime>=moment().startOf("month")&&eventStartTime<=moment().startOf("month").add(1,"month");case"Next Month":return eventStartTime>=moment().startOf("month").add(1,"month")&&eventStartTime<=moment().startOf("month").add(2,"month");case"Greater Than Next Month":return eventStartTime>=moment().startOf("month").add(2,"month")}},$scope.locationFilter=function(event){var locationFilter=$scope.eventFilters.locationName;return!locationFilter||locationFilter===event.locationName},$scope.selectEvent=function(e,route){"register"===route?$location.path("/register/"+e.id+"/page/"):$location.path("/"+route+"/"+e.id)}}),angular.module("confRegistrationWebApp").controller("PaymentApprovalCtrl",function($scope,$rootScope,$routeParams,$http,modalMessage){$rootScope.globalPage={type:"registration",mainClass:"container front-form",bodyClass:"user-registration",title:"Event Registration Tool",confId:0,footer:!1},$scope.payment={};var paymentHash=$routeParams.paymentHash;$http.get("payments/scholarship/"+paymentHash).success(function(data){$scope.payment=data}).error(function(){$scope.payment=null}),$scope.updatePayment=function(status){$scope.posting=!0;var paymentObject=angular.copy($scope.payment);paymentObject.status=status,$http.put("payments/scholarship/"+paymentHash,paymentObject).success(function(){$scope.payment=paymentObject}).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while saving the payment."),$scope.posting=!1})}}),angular.module("confRegistrationWebApp").controller("paymentModal",function($scope,$modalInstance,modalMessage,$http,registration,conference,permissions,permissionConstants,expenseTypesConstants){$scope.registration=registration,$scope.conference=conference,$scope.expenseTypesConstants=expenseTypesConstants,$scope.processing=!1,$scope.activeTab={},$scope.newTransaction={registrationId:registration.id,amount:0,sendEmailReceipt:!1};var permissionRequiredMsg="You do not have permission to perform this action. Please contact an event administrator to request permission.";$scope.getRegistrantType=function(id){return _.find(conference.registrantTypes,{id:id})},$scope.getBlock=function(blockId){var allBlocks=[];return _.each(conference.registrationPages,function(page){allBlocks=allBlocks.concat(page.blocks)}),_.find(allBlocks,{id:blockId})},$scope.processTransaction=function(){if(_.isEmpty($scope.newTransaction.paymentType))return void modalMessage.error("Please select a transaction type.");if(Number($scope.newTransaction.amount)<=0&&$scope.newTransaction.errors.unshift("Transaction amount must be a positive number."),!_.isEmpty($scope.newTransaction.errors))return void modalMessage.error({title:"Please correct the following errors:",message:$scope.newTransaction.errors});if(permissions.permissionInt<permissionConstants.CHECK_IN){if(permissions.permissionInt!==permissionConstants.SCHOLARSHIP)return void modalMessage.error(permissionRequiredMsg);if("SCHOLARSHIP"!==$scope.newTransaction.paymentType)return void modalMessage.error("Your permission level only allows scholarship payments to be added. Please contact an event administrator to request permission.")}if(permissions.permissionInt<permissionConstants.FULL&&_.contains(["ADDITIONAL_EXPENSE","DISCOUNT"],$scope.newTransaction.paymentType))return void modalMessage.error(permissionRequiredMsg);var transaction=angular.copy($scope.newTransaction);delete transaction.errors,transaction.amount=Number(transaction.amount);var path="payments?sendEmailReceipt="+transaction.sendEmailReceipt;if(delete transaction.sendEmailReceipt,_.contains(["ADDITIONAL_EXPENSE","DISCOUNT"],transaction.paymentType)){if(!transaction.description)return void modalMessage.error("Please enter a description.");path="expenses","DISCOUNT"===transaction.paymentType&&(transaction.amount=Number(transaction.amount)*-1),delete transaction.paymentType}"SCHOLARSHIP"===transaction.paymentType&&(transaction.status="APPROVED"),$scope.processing=!0,"CREDIT_CARD"===transaction.paymentType?$http.get("payments/ccp-client-encryption-key",{cache:!0}).success(function(ccpClientEncryptionKey){ccp.initialize(ccpClientEncryptionKey),transaction.creditCard.lastFourDigits=ccp.getAbbreviatedNumber(transaction.creditCard.number),transaction.creditCard.number=ccp.encrypt(transaction.creditCard.number),transaction.creditCard.cvvNumber=ccp.encrypt(transaction.creditCard.cvvNumber),postTransaction(path,transaction)}).error(function(){$scope.processing=!1,modalMessage.error("An error occurred while requesting the ccp encryption key.")}):(delete transaction.creditCard,postTransaction(path,transaction))};var postTransaction=function(path,transaction){$http.post(path,transaction).success(function(){loadPayments(),"expenses"===path?$scope.activeTab[2]=!0:$scope.activeTab[1]=!0}).error(function(data){modalMessage.error(data.error?data.error.message:"Transaction failed."),$scope.processing=!1})};$scope.canBeRefunded=function(payment){return"REFUND"!==payment.paymentType&&"TRANSFER"!==payment.paymentType&&"SCHOLARSHIP"!==payment.paymentType&&$scope.calculateRefundableAmount(payment)>0},$scope.calculateRefundableAmount=function(payment){if(angular.isUndefined(payment))return 0;var sum=payment.amount;return _.each($scope.registration.pastPayments,function(prevRefund){"REFUND"===prevRefund.paymentType&&prevRefund.refundedPaymentId===payment.id&&(sum-=prevRefund.amount)}),sum},$scope.startRefund=function(payment){if(permissions.permissionInt<permissionConstants.CHECK_IN)return void modalMessage.error(permissionRequiredMsg);$scope.paymentToRefund=payment;var refundAmount;refundAmount=$scope.isPartialRefundAvailable(payment,payment.paymentType)?$scope.calculateRefundableAmount(payment):payment.amount,$scope.refund={amount:refundAmount,refundedPaymentId:payment.id,registrationId:payment.registrationId,paymentType:"REFUND",refundChannel:payment.paymentType}},$scope.refreshRefund=function(paymentToRefund,refund){$scope.isPartialRefundAvailable(paymentToRefund,refund.refundChannel)?refund.amount=$scope.calculateRefundableAmount(paymentToRefund):refund.amount=paymentToRefund.amount},$scope.processRefund=function(){return $scope.refund.refundChannel?($scope.processing=!0,void $http.post("payments/",$scope.refund).success(function(){$scope.refund=null,loadPayments()}).error(function(data){modalMessage.error(data.error?data.error.message:"Refund failed.")}).finally(function(){$scope.processing=!1})):void modalMessage.error("Please select a refund method.")},$scope.cancelRefund=function(){delete $scope.refund},$scope.removeExpense=function(expense){return permissions.permissionInt<permissionConstants.UPDATE?void modalMessage.error(permissionRequiredMsg):void modalMessage.confirm({title:"Delete Expense?",question:"Are you sure you want to delete this expense?"}).then(function(){$http.delete("expenses/"+expense.id).success(function(){loadPayments()}).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while deleting this expense.")})})},$scope.savePaymentEdits=function(payment){"SCHOLARSHIP"===payment.paymentType&&(payment.status="APPROVED"),"CHECK"===payment.paymentType&&(payment.status="RECEIVED"),$http.put("payments/"+payment.id,payment).success(function(){loadPayments(),delete $scope.editPayment}).error(function(data){modalMessage.error(data.error?data.error.message:"Payment could not be saved.")})},$scope.openEditPaymentRow=function(payment){angular.isDefined($scope.editPayment)&&$scope.editPayment.id===payment.id?delete $scope.editPayment:permissions.permissionInt>=permissionConstants.CHECK_IN||permissions.permissionInt===permissionConstants.SCHOLARSHIP&&"SCHOLARSHIP"===payment.paymentType?$scope.editPayment=angular.copy(payment):modalMessage.error(permissionRequiredMsg)},$scope.saveExpenseEdits=function(expense){$http.put("expenses/"+expense.id,expense).success(function(){loadPayments(),delete $scope.editExpense}).error(function(data){modalMessage.error(data.error?data.error.message:"Expense could not be saved.")})};var loadPayments=function(){$http.get("registrations/"+$scope.registration.id).success(function(data){$scope.registration=data,$scope.processing=!1,$scope.newTransaction={registrationId:registration.id,amount:0,sendEmailReceipt:!1}})};$scope.deletePayment=function(payment){return permissions.permissionInt<permissionConstants.CHECK_IN?void modalMessage.error(permissionRequiredMsg):void modalMessage.confirm({title:"Delete payment?",question:"Are you sure you want to delete this payment?"}).then(function(){$http.delete("payments/"+payment.id,payment).success(function(){loadPayments()}).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while deleting this payment.")})})},$scope.openEditExpenseRow=function(expense){if(angular.isDefined($scope.editExpense)&&$scope.editExpense.id===expense.id)delete $scope.editExpense;else{if(permissions.permissionInt<permissionConstants.FULL)return void modalMessage.error(permissionRequiredMsg);$scope.editExpense=angular.copy(expense)}},$scope.setTransactionAmount=function(){var paymentTypes=["CREDIT_CARD","OFFLINE_CREDIT_CARD","SCHOLARSHIP","TRANSFER","CHECK","CASH"];$scope.registration.remainingBalance>0&&(0===$scope.newTransaction.amount||""===$scope.newTransaction.amount||"0"===$scope.newTransaction.amount)&&_.contains(paymentTypes,$scope.newTransaction.paymentType)&&($scope.newTransaction.amount=$scope.registration.remainingBalance)},$scope.addPromotion=function(inputCode){$http.post("registrations/"+registration.id+"/promotions",{code:inputCode}).success(function(){loadPayments()}).error(function(data,status){var msg=data.error?data.error.message:"Promo code could not be added.";modalMessage.error({message:404===status?"The promo code you have entered is invalid or does not apply to this registration.":msg,title:"Invalid Code",forceAction:!0})})},$scope.deletePromotion=function(promoId){if(permissions.permissionInt<permissionConstants.UPDATE)return void modalMessage.error(permissionRequiredMsg);var regCopy=angular.copy($scope.registration);_.remove(regCopy.promotions,{id:promoId}),$http.put("registrations/"+registration.id,regCopy).success(loadPayments).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while deleting promotion.")})},$scope.filterUsedPromoCodes=function(p){var registrationPromoCodes=_.pluck($scope.registration.promotions,"id");return!_.contains(registrationPromoCodes,p.id)},$scope.isPartialRefundAvailable=function(payment,refundChannel){var diff=(new Date).getTime()-new Date(payment.transactionDatetime).getTime(),lengthToSettle=864e5;return!("CREDIT_CARD"===payment.paymentType&&"CREDIT_CARD"===refundChannel&&diff<lengthToSettle)}}),angular.module("confRegistrationWebApp").controller("RegistrationCtrl",function($scope,$rootScope,$routeParams,$route,$location,$window,$http,$q,$interval,RegistrationCache,conference,currentRegistration,validateRegistrant,modalMessage){$rootScope.globalPage={type:"registration",mainClass:"container front-form",bodyClass:"user-registration",conference:conference,confId:conference.id,footer:!1};var pageId=$routeParams.pageId;$scope.conference=angular.copy(conference);var originalCurrentRegistration=angular.copy(currentRegistration);$scope.currentRegistration=currentRegistration,$scope.currentRegistrant=$routeParams.reg,$scope.savingAnswers=!1,$scope.activePageId=pageId||"",$scope.page=_.find(conference.registrationPages,{id:pageId}),$scope.activePageIndex=_.findIndex($scope.conference.registrationPages,{id:pageId}),$scope.nextPage=function(){var visiblePageArray=_.filter($scope.conference.registrationPages,function(page){return $scope.pageIsVisible(page)});return visiblePageArray[_.findIndex(visiblePageArray,{id:pageId})+1]},$scope.activePageIndex===-1&&angular.isDefined($scope.page)&&$location.path("/"+$rootScope.registerMode+"/"+conference.id+"/page/"+$scope.conference.registrationPages[0].id),$rootScope.visitedPages||($rootScope.visitedPages=[]);var pageAndRegistrantId=$scope.currentRegistrant+"_"+$scope.activePageIndex;$scope.currentPageVisited=_.contains($rootScope.visitedPages,pageAndRegistrantId),$scope.visitedPage=function(pageId){return _.contains($rootScope.visitedPages,$scope.currentRegistrant+"_"+_.findIndex($scope.conference.registrationPages,{id:pageId}))},$scope.$on("$routeChangeStart",function(){$interval.cancel(saveAnswersInterval),angular.isUndefined($scope.currentRegistrant)||($scope.savingAnswers=!0,$q.all(findAnswersToSave()),$scope.currentRegistrant&&$rootScope.visitedPages.push(pageAndRegistrantId))});var saveAnswersInterval=$interval(function(){angular.isUndefined($scope.currentRegistrant)||($scope.savingAnswers=!0,$q.all(findAnswersToSave()).then(function(){$scope.savingAnswers=!1}))},15e3);$scope.goToNext=function(){var nextPage=$scope.nextPage();angular.isDefined(nextPage)?$location.path("/"+$rootScope.registerMode+"/"+conference.id+"/page/"+nextPage.id):$scope.reviewRegistration()},$scope.previousPage=function(){var visiblePageArray=_.filter($scope.conference.registrationPages,function(page){return $scope.pageIsVisible(page)}),previousPage=visiblePageArray[_.findIndex(visiblePageArray,{id:pageId})-1];angular.isDefined(previousPage)?$location.path("/"+$rootScope.registerMode+"/"+conference.id+"/page/"+previousPage.id):$scope.currentRegistration.completed?$location.path("/reviewRegistration/"+conference.id):$location.path("/"+$rootScope.registerMode+"/"+conference.id+"/page/").search("reg",null)},$scope.reviewRegistration=function(){return angular.isUndefined($scope.currentRegistrant)?void $location.path("/reviewRegistration/"+conference.id).search("regType",null).search("reg",null):($scope.savingAnswers=!0,void $q.all(findAnswersToSave()).then(function(){$location.path("/reviewRegistration/"+conference.id).search("regType",null).search("reg",null)}))},$scope.registrantName=function(r){var nameBlock=_.find(_.flatten(conference.registrationPages,"blocks"),{profileType:"NAME"}).id,registrant=_.find($scope.currentRegistration.registrants,{id:r.id}),returnStr="";return nameBlock=_.find(registrant.answers,{blockId:nameBlock}),angular.isDefined(nameBlock)&&(nameBlock=nameBlock.value,angular.isDefined(nameBlock.firstName)&&(returnStr=nameBlock.firstName+" "+(nameBlock.lastName||""))),returnStr.trim().length?returnStr:_.find(conference.registrantTypes,{id:r.registrantTypeId}).name},$scope.registrantIsComplete=function(registrantId){var invalidBlocks=validateRegistrant.validate(conference,_.find(currentRegistration.registrants,{id:registrantId}));return!invalidBlocks.length},$scope.pageIsValid=function(pageId){var invalidBlocks=validateRegistrant.validate(conference,_.find(currentRegistration.registrants,{id:$scope.currentRegistrant}),pageId);return!invalidBlocks.length},$scope.startOver=function(){modalMessage.confirm({title:"Start Over",question:"Are you sure you want to start over? All answers will be erased.",yesString:"Start Over",noString:"Cancel",normalSize:!0}).then(function(){var registrantDeleteRequests=[];angular.forEach($scope.currentRegistration.registrants,function(r){registrantDeleteRequests.push($http({method:"DELETE",url:"registrants/"+r.id}))}),$q.all(registrantDeleteRequests).then(function(){RegistrationCache.emptyCache(),$route.reload()})})},$scope.pageIsVisible=function(page){return!angular.isUndefined($scope.currentRegistrant)&&_.contains(_.map(page.blocks,function(block){return validateRegistrant.blockVisible(block,_.find($scope.currentRegistration.registrants,{id:$scope.currentRegistrant}))}),!0)};var findAnswersToSave=function(){var currentRegistrantOriginal=_.find(originalCurrentRegistration.registrants,{id:$scope.currentRegistrant}),currentRegistrantOriginalAnswers=currentRegistrantOriginal?currentRegistrantOriginal.answers:[],currentRegistrant=_.find($scope.currentRegistration.registrants,{id:$scope.currentRegistrant}),answersToSave=[];return angular.forEach(currentRegistrant?currentRegistrant.answers:[],function(a){var savedAnswer=_.find(currentRegistrantOriginalAnswers,{id:a.id});!angular.isUndefined(savedAnswer)&&angular.equals(savedAnswer.value,a.value)||answersToSave.push($http.put("answers/"+a.id,a))}),originalCurrentRegistration=angular.copy($scope.currentRegistration),answersToSave}}),angular.module("confRegistrationWebApp").controller("registrationModal",function($scope,$modalInstance,$http,$route,conference,uuid,RegistrationCache,modalMessage){$scope.conference=conference,$scope.form={type:_.first(conference.registrantTypes).id},$scope.register=function(){var registrationId=uuid(),registration={id:registrationId,conferenceId:conference.id,completed:!0,registrants:[{id:uuid(),registrantTypeId:$scope.form.type,registrationId:registrationId,firstName:$scope.form.first,lastName:$scope.form.last,email:$scope.form.email,answers:[]}]};angular.forEach(_.flatten(conference.registrationPages,"blocks"),function(block){if("EMAIL"===block.profileType||"NAME"===block.profileType){var answer={
id:uuid(),registrantId:registration.id,blockId:block.id};"EMAIL"===block.profileType?answer.value=$scope.form.email:"NAME"===block.profileType&&(answer.value={firstName:$scope.form.first,lastName:$scope.form.last}),registration.registrants[0].answers.push(answer)}}),$http.post("conferences/"+conference.id+"/registrations",registration,{headers:{"Registration-Type":"on-behalf-of"}}).success(function(){RegistrationCache.emptyCache(),$route.reload()}).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while creating registration.")}),$modalInstance.dismiss()}}),angular.module("confRegistrationWebApp").controller("ReviewRegistrationCtrl",function($scope,$rootScope,$location,$route,$window,modalMessage,$http,registration,conference,RegistrationCache,validateRegistrant,$filter){if($rootScope.globalPage={type:"registration",mainClass:"container front-form",bodyClass:"user-registration",conference:conference,confId:conference.id,footer:!1},_.isEmpty(registration.registrants)&&!registration.completed&&$location.path("/"+($rootScope.registerMode||"register")+"/"+conference.id+"/page/"),$scope.conference=conference,$scope.currentRegistration=registration,$scope.blocks=[],$scope.regValidate=[],_.isEmpty(registration.registrants)||($scope.allowGroupRegistration=!1,angular.forEach(registration.registrants,function(r){if(!$scope.allowGroupRegistration){var regType=_.find(conference.registrantTypes,{id:r.registrantTypeId});$scope.allowGroupRegistration=regType.allowGroupRegistrations}})),angular.isUndefined($scope.currentPayment)){var paymentType;conference.acceptCreditCards?paymentType="CREDIT_CARD":conference.acceptChecks?paymentType="CHECK":conference.acceptTransfers?paymentType="TRANSFER":conference.acceptScholarships&&(paymentType="SCHOLARSHIP"),$scope.currentPayment={amount:$scope.currentRegistration.remainingBalance,paymentType:paymentType}}angular.forEach(_.flatten(conference.registrationPages,"blocks"),function(block){block.type.indexOf("Content")===-1&&$scope.blocks.push(block)}),angular.forEach(registration.registrants,function(r){$scope.regValidate[r.id]=validateRegistrant.validate(conference,r)}),$scope.findAnswer=function(blockId){return _.find($scope.answers,{blockId:blockId})},$scope.getBlock=function(blockId){return _.find($scope.blocks,{id:blockId})},$scope.confirmRegistration=function(){if($scope.submittingRegistration=!0,0===$scope.currentRegistration.pastPayments.length&&Number($scope.currentPayment.amount)<$scope.currentRegistration.calculatedMinimumDeposit&&$scope.currentPayment.errors.push("You are required to pay at least the minimum deposit of "+$filter("currency")(registration.calculatedMinimumDeposit,"$")+" to register for this event."),Number($scope.currentPayment.amount)>$scope.currentRegistration.remainingBalance&&$scope.currentPayment.errors.push("You are paying more than the total due of "+$filter("currency")(registration.remainingBalance,"$")+" to register for this event."),0===Number($scope.currentPayment.amount)||!$scope.acceptedPaymentMethods())return void setRegistrationAsCompleted();if(!_.isEmpty($scope.currentPayment.errors))return modalMessage.error({title:"Please correct the following errors:",message:$scope.currentPayment.errors}),void($scope.submittingRegistration=!1);if("PAY_ON_SITE"===$scope.currentPayment.paymentType)return void($scope.currentRegistration.completed?$scope.submittingRegistration=!1:setRegistrationAsCompleted());var currentPayment=angular.copy($scope.currentPayment);currentPayment.registrationId=registration.id,delete currentPayment.errors,"CREDIT_CARD"===currentPayment.paymentType?$http.get("payments/ccp-client-encryption-key").success(function(ccpClientEncryptionKey){ccp.initialize(ccpClientEncryptionKey),currentPayment.creditCard.lastFourDigits=ccp.getAbbreviatedNumber(currentPayment.creditCard.number),currentPayment.creditCard.number=ccp.encrypt(currentPayment.creditCard.number),currentPayment.creditCard.cvvNumber=ccp.encrypt(currentPayment.creditCard.cvvNumber),postPayment(currentPayment)}).error(function(){modalMessage.error("An error occurred while requesting the ccp encryption key. Please try your payment again.")}):postPayment(currentPayment)};var postPayment=function(currentPayment){$http.post("payments/",currentPayment).success(function(){delete $scope.currentPayment,$scope.currentRegistration.completed?$route.reload():setRegistrationAsCompleted()}).error(function(data){$scope.submittingRegistration=!1,modalMessage.error({message:data.error?data.error.message:"An error occurred while attempting to process your payment.",forceAction:!0})})},setRegistrationAsCompleted=function(){registration=angular.copy(registration),registration.completed=!0,RegistrationCache.update("registrations/"+registration.id,registration,function(){RegistrationCache.emptyCache(),conference.registrationCompleteRedirect?$window.location.href=conference.registrationCompleteRedirect:$route.reload()},function(data){$scope.currentRegistration.completed=!1,$scope.submittingRegistration=!1,modalMessage.error(data.error?data.error.message:"An error occurred while submitting your registration.")})};$scope.editRegistrant=function(id){$location.path("/"+($rootScope.registerMode||"register")+"/"+conference.id+"/page/"+conference.registrationPages[0].id).search("reg",id)},$scope.removeRegistrant=function(id){modalMessage.confirm({title:"Delete registrant?",question:"Are you sure you want to delete this registrant?"}).then(function(){$http({method:"DELETE",url:"registrants/"+id}).success(function(){$route.reload()}).error(function(data){modalMessage.error({message:data.error?data.error.message:"An error occurred while removing registrant."})})})},$scope.getRegistrantType=function(id){return _.find(conference.registrantTypes,{id:id})},$scope.isBlockInvalid=function(rId,bId){return _.contains($scope.regValidate[rId],bId)},$scope.allRegistrantsValid=function(){var returnVal=!0;return angular.forEach(registration.registrants,function(r){angular.isUndefined($scope.regValidate[r.id])?returnVal=!1:$scope.regValidate[r.id].length&&(returnVal=!1)}),returnVal},$scope.blockVisibleForRegistrant=function(block,registrant){return validateRegistrant.blockVisible(block,registrant)},$scope.acceptedPaymentMethods=function(){var regTypesInRegistration=[];angular.forEach(_.uniq(_.pluck(registration.registrants,"registrantTypeId")),function(registrantTypeId){regTypesInRegistration.push($scope.getRegistrantType(registrantTypeId))});var paymentMethods={acceptCreditCards:_.some(regTypesInRegistration,"acceptCreditCards"),acceptChecks:_.some(regTypesInRegistration,"acceptChecks"),acceptTransfers:_.some(regTypesInRegistration,"acceptTransfers"),acceptScholarships:_.some(regTypesInRegistration,"acceptScholarships"),acceptPayOnSite:_.some(regTypesInRegistration,"acceptPayOnSite")&&!registration.completed};return!!_.some(paymentMethods)&&paymentMethods},$scope.registrantDeletable=function(r){if(registration.completed)return!1;var groupRegistrants=0,noGroupRegistrants=0;angular.forEach(registration.registrants,function(r){var regType=_.find(conference.registrantTypes,{id:r.registrantTypeId});regType.allowGroupRegistrations?groupRegistrants++:noGroupRegistrants++});var regType=_.find(conference.registrantTypes,{id:r.registrantTypeId});return!regType.allowGroupRegistrations||1!==groupRegistrants||!noGroupRegistrants},$scope.validatePromo=function(inputCode){$scope.addingPromoCode=!0,$http.post("registrations/"+registration.id+"/promotions",{code:inputCode}).success(function(){$route.reload()}).error(function(data,status){$scope.addingPromoCode=!1;var msg=data.error?data.error.message:"An error has occurred.";modalMessage.error({message:404===status?"The promo code you have entered is invalid or does not apply to your registration.":msg,title:"Invalid Code",forceAction:!0})})},$scope.deletePromotion=function(promoId){modalMessage.confirm({title:"Delete Promotion",question:"Are you sure you want to delete this promotion?"}).then(function(){var regCopy=angular.copy($scope.currentRegistration);_.remove(regCopy.promotions,{id:promoId}),$http.put("registrations/"+registration.id,regCopy).success(function(){$route.reload()}).error(function(data){modalMessage.error(data.error?data.error.message:"An error occurred while deleting promotion.")})})},$scope.hasPendingPayments=function(payments){return _.some(payments,{status:"REQUESTED"})||_.some(payments,{status:"PENDING"})},$scope.hasPendingCheckPayment=function(payments){return _.some(payments,{paymentType:"CHECK",status:"PENDING"})}}),angular.module("confRegistrationWebApp").directive("adminNav",function($http,ConfCache,modalMessage){return{templateUrl:"views/components/4bcc11da.4bcc11da.adminNav.html",restrict:"A",controller:function($scope,$location,PermissionCache,permissionConstants){$scope.isActive=function(viewLocation){return viewLocation===$location.path().substr(0,viewLocation.length)},$scope.archiveEvent=function(conferenceId){PermissionCache.getForConference(conferenceId).then(function(permissions){return permissions.permissionInt<permissionConstants.FULL?void modalMessage.error("You do not have permission to perform this action. Please contact an event admin to request permission."):void modalMessage.confirm({title:"Archive Event",question:"Are you sure you want to archive this event? Events can be unarchived later.",yesString:"Archive",noString:"Cancel",normalSize:!0}).then(function(){ConfCache.get(conferenceId).then(function(conference){conference.archived=!0,$http({method:"PUT",url:"conferences/"+conferenceId,data:conference}).success(function(){ConfCache.empty(),$location.path("/eventDashboard")}).error(function(data){modalMessage.error(data.error?data.error.message:"An error has occurred.")})})})})}}}}),angular.module("confRegistrationWebApp").directive("autoFocus",function($timeout){return{restrict:"A",link:function(scope,element){$timeout(function(){element[0].focus()},300)}}}),angular.module("confRegistrationWebApp").directive("blockEditor",function(){return{templateUrl:"views/components/c2631320.c2631320.blockEditor.html",restrict:"A",controller:function($scope,$modal,modalMessage,uuid,expenseTypesConstants){$scope.activeTab="options",$scope.visibleRegTypes={},angular.forEach($scope.conference.registrantTypes,function(type){$scope.visibleRegTypes[type.id]=!_.contains($scope.block.registrantTypes,type.id)}),$scope.$watch("visibleRegTypes",function(object){angular.isDefined(object)&&($scope.block.registrantTypes=_.keys(_.omit(object,function(value){return value})).sort(),$scope.visibleRegTypesArray=_.keys(_.omit(object,function(value){return!value})))},!0);var typeToProfile=[];typeToProfile.phoneQuestion="PHONE",typeToProfile.addressQuestion="ADDRESS",typeToProfile.genderQuestion="GENDER",typeToProfile.yearInSchoolQuestion="YEAR_IN_SCHOOL",$scope.profileCheck=!_.isNull($scope.block.profileType),$scope.profileOption=_.has(typeToProfile,$scope.block.type),$scope.requiredOption=!_.contains(["paragraphContent"],$scope.block.type),$scope.hasOptions=_.contains(["radioQuestion","checkboxQuestion","selectQuestion"],$scope.block.type);var notName=!_.contains(["NAME"],$scope.block.profileType),notNameOrEmail=!_.contains(["NAME","EMAIL"],$scope.block.profileType);$scope.canDelete=notNameOrEmail,$scope.canHaveRules=notNameOrEmail,$scope.canChangeRegTypes=notName,$scope.expenseTypesConstants=expenseTypesConstants,$scope.toggleBlockEdit=function(selectTab){$scope.activeTab={},selectTab?($scope.editBlock=!0,$scope.activeTab[selectTab]=!0):$scope.editBlock=!$scope.editBlock},$scope.editBlockAddOption=function(newOption){angular.isUndefined($scope.block.content.choices)&&($scope.block.content={choices:[]}),$scope.block.content.choices.push({value:newOption,desc:""})},$scope.editBlockOptionMoveUp=function(index){if(index>0&&index<$scope.block.content.choices.length){var temp=$scope.block.content.choices[index];$scope.block.content.choices[index]=$scope.block.content.choices[index-1],$scope.block.content.choices[index-1]=temp}},$scope.editBlockOptionMoveDown=function(index){if(index>=0&&index<$scope.block.content.choices.length-1){var temp=$scope.block.content.choices[index];$scope.block.content.choices[index]=$scope.block.content.choices[index+1],$scope.block.content.choices[index+1]=temp}},$scope.editBlockDeleteOption=function(index){$scope.block.content.choices.splice(index,1)},$scope.editBlockOptionAdvanced=function(index){$modal.open({templateUrl:"views/modals/99a54e58.99a54e58.choiceOptions.html",controller:function($scope,$modalInstance,choice,blockType){$scope.blockType=blockType,$scope.choice=choice,$scope.close=function(){$modalInstance.dismiss()},$scope.save=function(choice){_.isUndefined(choice.amount)?choice.amount=0:_.isString(choice.amount)&&(choice.amount=choice.amount.replace(",","")),_.isNaN(Number(choice.amount))?modalMessage.error("Error: please enter a valid additional cost."):$modalInstance.close(choice)}},resolve:{choice:function(){return angular.copy($scope.block.content.choices[index])},blockType:function(){return $scope.block.type}}}).result.then(function(choice){choice.amount=Number(choice.amount),$scope.block.content.choices[index]=choice})},$scope.toggleProfileType=function(value){if(value){$scope.block.profileType=typeToProfile[$scope.block.type];var profileCount=0;$scope.conference.registrationPages.forEach(function(page){page.blocks.forEach(function(block){$scope.block.profileType===block.profileType&&profileCount++})}),profileCount>1&&(modalMessage.error("Only one "+$scope.block.profileType.charAt(0).toUpperCase()+$scope.block.profileType.slice(1).toLowerCase()+" profile block can be used per form."),$scope.block.profileType=null,$scope.profileCheck=!1)}else $scope.block.profileType=null},$scope.addRule=function(){var ruleBlocks=$scope.ruleBlocks();return ruleBlocks.length?void $scope.block.rules.push({id:uuid(),blockId:$scope.block.id,parentBlockId:ruleBlocks[0].id,operator:"=",value:""}):void modalMessage.info({title:"Add Rule",message:"No valid questions appear before this question in your form. Rule cannot be added."})},$scope.ruleBlocks=function(){var blocks=_.flatten(_.pluck($scope.conference.registrationPages,"blocks")),remove=!1;return _.remove(blocks,function(b){return b.id===$scope.block.id&&(remove=!0),remove}),blocks=_.filter(blocks,function(b){return _.contains(["radioQuestion","selectQuestion","numberQuestion","dateQuestion","genderQuestion","yearInSchoolQuestion"],b.type)})},$scope.ruleValues=function(parentBlockId){var blocks=_.flatten(_.pluck($scope.conference.registrationPages,"blocks")),block=_.find(blocks,{id:parentBlockId});switch(block.type){case"selectQuestion":case"radioQuestion":return _.pluck(block.content.choices,"value");case"genderQuestion":return["M","F"];case"yearInSchoolQuestion":return["Freshman","Sophomore","Junior","Senior","Graduate Student"];default:return[]}},$scope.removeRule=function(id){_.remove($scope.block.rules,{id:id})},$scope.ruleValueInputType=function(parentBlockId){var blocks=_.flatten(_.pluck($scope.conference.registrationPages,"blocks")),parentBlock=_.find(blocks,{id:parentBlockId});switch(parentBlock.type){case"selectQuestion":case"radioQuestion":case"yearInSchoolQuestion":return"select";case"genderQuestion":return"gender";case"dateQuestion":return"date";case"numberQuestion":return"number"}},$scope.registrationTypeName=function(id){if(id)return _.find($scope.conference.registrantTypes,{id:id}).name}}}}),angular.module("confRegistrationWebApp").directive("blockRegistration",function(){return{templateUrl:"views/components/0a87d037.0a87d037.blockRegistration.html",restrict:"A",controller:function($scope,$routeParams,RegistrationCache,uuid,validateRegistrant){if(angular.isDefined($scope.adminEditRegistrant))$scope.answer=_.find($scope.adminEditRegistrant.answers,{blockId:$scope.block.id}),angular.isUndefined($scope.answer)&&($scope.answer={id:uuid(),registrantId:$scope.adminEditRegistrant.id,blockId:$scope.block.id,value:"checkboxQuestion"===$scope.block.type?{}:""},$scope.adminEditRegistrant.answers.push($scope.answer));else{var registrantId=$routeParams.reg;if(angular.isUndefined(registrantId)||angular.isUndefined($scope.block))return;var registrantIndex=_.findIndex($scope.currentRegistration.registrants,{id:registrantId});if(registrantIndex===-1)return;if("paragraphContent"!==$scope.block.type){if($scope.answer=_.find($scope.currentRegistration.registrants[registrantIndex].answers,{blockId:$scope.block.id}),angular.isUndefined($scope.answer)){switch($scope.answer={id:uuid(),registrantId:registrantId,blockId:$scope.block.id},$scope.block.type){case"checkboxQuestion":$scope.answer.value={};break;case"nameQuestion":$scope.answer.value={firstName:"",lastName:""};break;case"addressQuestion":$scope.answer.value={address1:"",address2:"",city:"",state:"",zip:""};break;default:$scope.answer.value=""}$scope.currentRegistration.registrants[registrantIndex].answers.push($scope.answer)}$scope.$watch("answer",function(answer,oldAnswer){angular.isUndefined(answer)||angular.isUndefined(oldAnswer)||angular.equals(answer,oldAnswer)||RegistrationCache.updateCurrent($scope.conference.id,$scope.currentRegistration)},!0)}}$scope.blockVisible=function(block){if(angular.isUndefined($scope.currentRegistration)||angular.isUndefined($scope.currentRegistrant))return!1;var registrant=_.find($scope.currentRegistration.registrants,{id:$scope.currentRegistrant});return validateRegistrant.blockVisible(block,registrant)}}}}),angular.module("confRegistrationWebApp").directive("nameQuestion",function(){return{templateUrl:"views/blocks/c90aba35.c90aba35.nameQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("addressQuestion",function(){return{templateUrl:"views/blocks/0948d55d.0948d55d.addressQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("checkboxQuestion",function(){return{templateUrl:"views/blocks/1e06c0a7.1e06c0a7.checkboxQuestion.html",restrict:"E",controller:function($scope){$scope.atLeastOneChecked=function(){return!!$scope.answer&&angular.isDefined(_.findKey($scope.answer.value,function(v){return v===!0}))}}}}),angular.module("confRegistrationWebApp").directive("emailQuestion",function(){return{templateUrl:"views/blocks/05ffa4b9.05ffa4b9.emailQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("numberQuestion",function(){return{templateUrl:"views/blocks/56394732.56394732.numberQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("phoneQuestion",function(){return{templateUrl:"views/blocks/2a380de2.2a380de2.phoneQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("radioQuestion",function(){return{templateUrl:"views/blocks/f7a96e6e.f7a96e6e.radioQuestion.html",restrict:"E",controller:function($scope){$scope.$watch("answer.value",function(){angular.isDefined($scope.answer)&&(_.contains(_.pluck($scope.block.content.choices,"value"),$scope.answer.value)||($scope.otherAnswer=$scope.answer.value))}),$scope.selectOtherAnswer=function(){$scope.answer&&($scope.answer.value=$scope.otherAnswer)}}}}),angular.module("confRegistrationWebApp").directive("selectQuestion",function(){return{templateUrl:"views/blocks/a4f3581c.a4f3581c.selectQuestion.html",restrict:"E",controller:function($scope,$filter){$scope.$watch("block",function(){$scope.visibleValues=[],angular.forEach($scope.block.content.choices,function(c){var visibleValue=c.value;c.amount&&(visibleValue=visibleValue+" - "+$filter("currency")(c.amount,"$")),$scope.visibleValues.push(visibleValue)})},!0)}}}),angular.module("confRegistrationWebApp").directive("textQuestion",function(){return{templateUrl:"views/blocks/99a4eac5.99a4eac5.textQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("genderQuestion",function(){return{templateUrl:"views/blocks/f8ad3b64.f8ad3b64.genderQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("dateQuestion",function(){return{templateUrl:"views/blocks/718de4ab.718de4ab.dateQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("yearInSchoolQuestion",function(){return{templateUrl:"views/blocks/331d21d3.331d21d3.yearInSchoolQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("textareaQuestion",function(){return{templateUrl:"views/blocks/5cf7191b.5cf7191b.textareaQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("crsDatetimepicker",function(){return{templateUrl:"views/components/38acea21.38acea21.datepicker.html",restrict:"E",scope:{localModel:"=model",ngDisabled:"="},controller:function($timeout,$scope){$scope.updateTimeStamp=function(timestamp){$scope.$apply(function(){$scope.localModel=moment(timestamp).format("YYYY-MM-DD HH:mm:ss")})}},link:function(scope,element){var datePickerElement=jQuery(element).find(".datepicker");datePickerElement.datetimepicker({defaultDate:scope.localModel?moment(scope.localModel).format("MM/DD/YYYY hh:mm A"):null}).on("dp.change",function(ev){scope.updateTimeStamp(ev.date)}),scope.$on("$destroy",function(){angular.isDefined(datePickerElement.data("DateTimePicker"))&&datePickerElement.data("DateTimePicker").destroy()})}}}),angular.module("confRegistrationWebApp").directive("questionToolbar",function($document,$timeout){return{restrict:"A",link:function($scope){function setQuestionToolbarSize(){var placeholder=$(".questions-toolbar-placeholder");placeholder.length&&($(".questions-toolbar").data("bs.affix").options.offset.top=placeholder.offset().top,placeholder.css("min-height",function(){return $(".questions-toolbar").outerHeight(!0)}))}!function($,sr){var debounce=function(func,threshold,execAsap){var timeout;return function(){function delayed(){execAsap||func.apply(obj,args),timeout=null}var obj=this,args=arguments;timeout?clearTimeout(timeout):execAsap&&func.apply(obj,args),timeout=setTimeout(delayed,threshold||500)}};jQuery.fn[sr]=function(fn){return fn?this.bind("resize",debounce(fn)):this.trigger(sr)}}(jQuery,"smartresize"),$scope.questionsToolbarVisible=!0,$scope.toggleQuestionsToolbar=function(){$scope.questionsToolbarVisible=!$scope.questionsToolbarVisible,$timeout(setQuestionToolbarSize,0)},$document.ready(function(){$(".questions-toolbar").affix({offset:{top:function(){return this.top=$(".questions-toolbar-placeholder").offset().top}}}),$timeout(setQuestionToolbarSize,0),$(window).smartresize(function(){setQuestionToolbarSize()})}),$scope.questions=[{id:"paragraphContent",defaultTitle:"Information",iconClass:"fa-info-circle",name:"Information"},{id:"textQuestion",defaultTitle:"Question",iconClass:"fa-pencil-square-o",name:"Text"},{id:"textareaQuestion",defaultTitle:"Question",iconClass:"fa-text-height",name:"Multi Line Text"},{id:"radioQuestion",defaultTitle:"Multiple Choice Question",iconClass:"fa-list",name:"Multiple Choice",tooltip:"Choose one"},{id:"checkboxQuestion",defaultTitle:"Checkbox Question",iconClass:"fa-check-square-o",name:"Checkbox",tooltip:"Choose one or more"},{id:"selectQuestion",defaultTitle:"Dropdown Question",iconClass:"fa-chevron-down",name:"Dropdown"},{id:"numberQuestion",defaultTitle:"Number",iconClass:"fa-superscript",name:"Number"},{id:"dateQuestion",defaultTitle:"Date",iconClass:"fa-calendar",name:"Date"},{id:"nameQuestion",defaultTitle:"Name",iconClass:"fa-user",name:"Name"},{id:"emailQuestion",defaultTitle:"Email",iconClass:"fa-envelope-o",name:"Email"},{id:"phoneQuestion",defaultTitle:"Telephone",defaultProfile:"PHONE",iconClass:"fa-phone-square",name:"Telephone"},{id:"addressQuestion",defaultTitle:"Address",defaultProfile:"ADDRESS",iconClass:"fa-home",name:"Address"},{id:"genderQuestion",defaultTitle:"Gender",defaultProfile:"GENDER",iconClass:"fa-male",name:"Gender"},{id:"yearInSchoolQuestion",defaultTitle:"Year in School",defaultProfile:"YEAR_IN_SCHOOL",iconClass:"fa-graduation-cap",name:"Year in School"}]}}}),angular.module("confRegistrationWebApp").directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),event.preventDefault())})}}),angular.module("confRegistrationWebApp").directive("page",function(){return{templateUrl:function(){var eventQuestionEditor=window.location.hash.indexOf("eventForm")!==-1;return eventQuestionEditor?"views/components/3274a63d.3274a63d.pageEditor.html":"views/components/531fc46b.531fc46b.pageRegistration.html"},restrict:"E"}}),angular.module("confRegistrationWebApp").directive("ertPayment",function(){return{templateUrl:"views/components/0151d51b.0151d51b.payment.html",restrict:"A",scope:{currentPayment:"=payment",currentRegistration:"=registration",paymentMethods:"=paymentMethods",isAdminPayment:"=adminPayment"},controller:function($scope,$http,expenseTypesConstants){$scope.conference=$scope.$parent.conference,$scope.expenseTypesConstants=expenseTypesConstants,$scope.currentYear=(new Date).getFullYear(),$scope.creditCardCountry="US",$scope.paymentMethodsViews={CREDIT_CARD:"views/paymentMethods/e610e89e.e610e89e.creditCard.html",OFFLINE_CREDIT_CARD:"views/paymentMethods/ccc3000e.ccc3000e.creditCardOffline.html",CHECK:$scope.isAdminPayment?"views/paymentMethods/2d1841d3.2d1841d3.checkAdmin.html":"views/paymentMethods/bb8c434c.bb8c434c.check.html",TRANSFER:"views/paymentMethods/a18a7618.a18a7618.transfer.html",SCHOLARSHIP:$scope.isAdminPayment?"views/paymentMethods/5b8654bc.5b8654bc.scholarshipAdmin.html":"views/paymentMethods/d250a127.d250a127.scholarship.html",PAY_ON_SITE:"views/paymentMethods/387c8658.387c8658.payOnSite.html",ADDITIONAL_EXPENSE:"views/paymentMethods/73df9d13.73df9d13.additionalExpense.html"},$scope.searchStaff=function(val){return $http.get("registrations/"+$scope.currentRegistration.id+"/staffsearch",{params:{name:val}}).then(function(response){return response.data})},$scope.selectStaff=function(item){$scope.currentPayment.scholarship={staffApprovalName:item.firstName+" "+item.lastName,staffEmail:item.email}},$scope.$watch("currentPayment",function(currentPayment){if(!angular.isUndefined(currentPayment)){currentPayment=angular.copy(currentPayment),currentPayment.creditCard||(currentPayment.creditCard={}),currentPayment.offlineCreditCard||(currentPayment.offlineCreditCard={}),currentPayment.transfer||(currentPayment.transfer={}),currentPayment.scholarship||(currentPayment.scholarship={}),currentPayment.check||(currentPayment.check={}),"SCHOLARSHIP"===currentPayment.paymentType&&$scope.isAdminPayment&&(currentPayment.paymentType="TRANSFER",currentPayment.transfer=currentPayment.scholarship);var paymentErrors=[];if(angular.isUndefined(currentPayment.paymentType))paymentErrors.push("Please select a payment method.");else switch(currentPayment.paymentType){case"CREDIT_CARD":currentPayment.creditCard.nameOnCard||paymentErrors.push("Please enter the name on your card.");var validationError=ccp.validateCardNumber(currentPayment.creditCard.number||"");validationError&&paymentErrors.push("Please enter a valid card number. The "+validationError+"."),currentPayment.creditCard.expirationMonth&&currentPayment.creditCard.expirationYear||paymentErrors.push("Please enter your card expiration date."),validationError=ccp.validateCardSecurityCode(currentPayment.creditCard.cvvNumber||""),validationError&&paymentErrors.push("Please enter a valid card security code. The "+validationError+"."),$scope.isAdminPayment||currentPayment.creditCard.billingAddress&&currentPayment.creditCard.billingCity&&currentPayment.creditCard.billingZip||paymentErrors.push("Please enter your card billing details.");break;case"OFFLINE_CREDIT_CARD":currentPayment.offlineCreditCard.transactionId||paymentErrors.push("Please enter a transaction ID.");break;case"SCHOLARSHIP":currentPayment.scholarship.staffEmail||paymentErrors.push("Please select a staff member to approve your scholarship.");break;case"TRANSFER":currentPayment.transfer.accountType||paymentErrors.push("Please select an Account Type."),"STAFF"===currentPayment.transfer.accountType?currentPayment.transfer.accountNumber||paymentErrors.push("Please enter a Staff Account Number."):"MINISTRY"===currentPayment.transfer.accountType&&(currentPayment.transfer.businessUnit&&currentPayment.transfer.operatingUnit&&currentPayment.transfer.department&&currentPayment.transfer.projectId||paymentErrors.push("Please fill in all ministry transfer fields."));break;case"CHECK":$scope.isAdminPayment&&(currentPayment.status||paymentErrors.push("Please select a check status."),currentPayment.check.checkNumber||paymentErrors.push("Please enter a check number."))}$scope.currentPayment.errors=paymentErrors}},!0)}}}),angular.module("confRegistrationWebApp").directive("pickADate",function(){return{templateUrl:"views/components/e7701634.e7701634.pickadate.html",restrict:"E",require:"ngModel",scope:{disabled:"=pickerDisabled"},link:function(scope,element,attr,ngModelController){var loaded=!1;scope.$watch(function(){return ngModelController.$viewValue},function(value){loaded||_.isEmpty(value)||(scope.picker.set("select",value,{format:"yyyy-mm-dd",muted:!0}),loaded=!0)});var pickerOptions={format:"mmm d, yyyy",selectYears:200};element.parents(".modal").length&&(pickerOptions.container="body"),scope.picker=$(element).find("input").first().pickadate(pickerOptions).pickadate("picker");var onSet=function(){scope.$apply(function(){ngModelController.$setViewValue(scope.picker.get("select","yyyy-mm-dd")),ngModelController.$setTouched()})};scope.picker.on("set",onSet),scope.$watch(function(){return scope.disabled},function(disabled){disabled?scope.picker.stop():(scope.picker.start(),scope.picker.on("set",onSet))}),scope.open=function(event){scope.picker.open(),event.stopPropagation()}}}}),angular.module("confRegistrationWebApp").directive("registrationTypeSelect",function(){return{templateUrl:"views/components/9c924964.9c924964.registrationTypeSelect.html",restrict:"E",controller:function($scope,$rootScope,$location,$routeParams,RegistrationCache,uuid){$scope.visibleRegistrantTypes=angular.copy($scope.conference.registrantTypes);var visibleType=$routeParams.regType;angular.isDefined(visibleType)?_.remove($scope.visibleRegistrantTypes,function(t){return t.id!==visibleType}):(_.remove($scope.visibleRegistrantTypes,function(t){return t.hidden&&!_.contains(_.pluck($scope.currentRegistration.registrants,"registrantTypeId"),t.id)}),_.isEmpty($scope.currentRegistration.registrants)&&_.remove($scope.visibleRegistrantTypes,function(t){return t.groupSubRegistrantType})),$scope.newRegistrant=function(type){var newId=uuid();$scope.currentRegistration.registrants.push({id:newId,registrationId:$scope.currentRegistration.id,registrantTypeId:type,answers:[]}),RegistrationCache.update("registrations/"+$scope.currentRegistration.id,$scope.currentRegistration,function(){RegistrationCache.emptyCache(),$location.path(($rootScope.registerMode||"register")+"/"+$scope.conference.id+"/page/"+$scope.conference.registrationPages[0].id).search("reg",newId)},function(){alert("An error occurred while updating your registration.")})},$scope.registrationTypeFull=function(type){return!!type.useLimit&&(!type.availableSlots||(type.availableSlots-_.filter($scope.currentRegistration.registrants,{registrantTypeId:type.id}).length<=0||void 0))}}}}),angular.module("confRegistrationWebApp").directive("selectOnClick",function(){return{restrict:"A",link:function(scope,element,attrs){element.on("click",function(){var elementToSelect=attrs.selectOnClick;_.isEmpty(elementToSelect)?this.select():document.getElementById(elementToSelect).select()})}}}),angular.module("confRegistrationWebApp").directive("showAnswer",function(){return{templateUrl:"views/components/ca6eb121.ca6eb121.answerDisplay.html",restrict:"E",scope:{block:"=",registrant:"=",showAmount:"="},controller:function($scope){if(angular.isDefined($scope.registrant)&&$scope.registrant.answers){var answerObject=_.find($scope.registrant.answers,{blockId:$scope.block.id});answerObject&&($scope.answer=answerObject);
}$scope.getSelectedCheckboxes=function(choices){return _.keys(_.pick(choices,function(val){return val===!0}))}}}}),angular.module("confRegistrationWebApp").directive("showErrors",function(){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModelCtrl){"group"===attrs.showErrors&&(scope.inputs||(scope.inputs=[]),scope.inputs.push(ngModelCtrl)),scope.$watch(function(scope){return ngModelCtrl.$invalid&&(scope.currentPageVisited||ngModelCtrl.$touched)},function(invalid){if(scope.inputs&&scope.inputs.length>=2){var groupInvalid=scope.inputs.some(function(currentValue){return currentValue.$invalid&&(scope.currentPageVisited||currentValue.$touched)});element.toggleClass("has-no-error",!invalid),element.parents(".form-group").toggleClass("has-error",groupInvalid)}else element.parents(".form-group").toggleClass("has-error",invalid)})}}}),angular.module("confRegistrationWebApp").filter("evtDateFormat",function(){return function(date,zone,format){return format||(format="MMM D, YYYY h:mm a z"),moment.tz(date,zone).format(format)}}),angular.module("confRegistrationWebApp").filter("joiner",function(){return function(input,separator){return angular.isArray(input)?input.join(separator||", "):input}}),angular.module("confRegistrationWebApp").filter("paymentTypeFormat",function(){return function(paymentType){return angular.isUndefined(paymentType)?"":paymentType.charAt(0).toUpperCase()+paymentType.substring(1).toLowerCase()}}),angular.module("confRegistrationWebApp").filter("tel",function(){return function(tel){if(!tel)return"";var country,city,number,value=tel.toString().trim().replace(/\D/g,"");switch(value.length){case 10:country=1,city=value.slice(0,3),number=value.slice(3);break;case 11:country=value[0],city=value.slice(1,4),number=value.slice(4);break;case 12:country=value.slice(0,3),city=value.slice(3,5),number=value.slice(5);break;default:return value}return 1===country&&(country=""),number=number.slice(0,3)+"-"+number.slice(3),(country+" ("+city+") "+number).trim()}}),angular.module("confRegistrationWebApp").filter("toTrustedHtml",["$sce",function($sce){return function(text){return $sce.trustAsHtml(text)}}]),angular.module("confRegistrationWebApp").filter("unique",function(){return function(items,filterOn){if(filterOn===!1)return items;if((filterOn||angular.isUndefined(filterOn))&&angular.isArray(items)){var newItems=[],extractValueToCompare=function(item){return angular.isObject(item)&&angular.isString(filterOn)?item[filterOn]:item};angular.forEach(items,function(item){for(var isDuplicate=!1,i=0;i<newItems.length;i++)if(angular.equals(extractValueToCompare(newItems[i]),extractValueToCompare(item))){isDuplicate=!0,newItems[i]._count++;break}isDuplicate||(item._count=1,newItems.push(item))}),items=newItems}return items}}),angular.module("confRegistrationWebApp").factory("apiUrl",function($location){var host=$location.$$host;return _.contains(["localhost","stage.eventregistrationtool.com"],host)?"https://api.stage.eventregistrationtool.com/eventhub-api/rest/":"https://api.eventregistrationtool.com/eventhub-api/rest/"}),angular.module("confRegistrationWebApp").factory("authorizationInterceptor",function($cookies){return{request:function(config){return config.headers.Authorization=$cookies.crsToken,config.withCredentials=!0,config}}}),angular.module("confRegistrationWebApp").service("ConfCache",function($cacheFactory,$rootScope,$http,$q,uuid,modalMessage){var cache=$cacheFactory("conf"),path=function(id){return"conferences/"+(id||"")};this.get=function(id,logLastAccess){var defer=$q.defer();id&&logLastAccess&&localStorage.setItem("lastAccess:"+id,Math.round(+new Date/1e3));var eventUrl=path(id),cachedConferences=cache.get(eventUrl);return angular.isDefined(cachedConferences)?defer.resolve(cachedConferences):($rootScope.loadingMsg="Loading Event Details",$http.get(eventUrl).success(function(conferences){cache.put(eventUrl,conferences),defer.resolve(conferences)}).error(function(){defer.reject()}).finally(function(){$rootScope.loadingMsg=""})),defer.promise},this.update=function(id,conference){cache.put(path(id),conference)},this.empty=function(){cache.removeAll()},this.create=function(name){var newConferenceId=uuid(),newPageId=uuid(),data={id:newConferenceId,name:name,allowEditRegistrationAfterComplete:!0,registrationStartTime:moment().format("YYYY-MM-DD HH:mm:ss"),registrationEndTime:moment().add(14,"days").format("YYYY-MM-DD HH:mm:ss"),eventStartTime:moment().add(14,"days").format("YYYY-MM-DD HH:mm:ss"),eventEndTime:moment().add(20,"days").format("YYYY-MM-DD HH:mm:ss"),eventTimezone:"America/New_York",paymentGatewayType:"AUTHORIZE_NET",registrantTypes:[{id:uuid(),name:"Default",conferenceId:newConferenceId,cost:0,familyStatus:"DISABLED"}],registrationPages:[{id:newPageId,conferenceId:newConferenceId,title:"Your Information",position:0,blocks:[{id:uuid(),pageId:newPageId,type:"nameQuestion",profileType:"NAME",title:"Name",position:0,required:!0},{id:uuid(),pageId:newPageId,type:"emailQuestion",title:"Email",profileType:"EMAIL",position:1,required:!0}]}]};return $http.post(path(),data).success(function(){cache.removeAll()}).error(function(data){modalMessage.error(data.error?data.error.message:"Error creating conference.")})},this.getPermissions=function(id){var q=$q.defer();return $http({method:"GET",url:"conferences/"+id+"/permissions"}).success(function(data){q.resolve(data)}).error(function(){q.reject([])}),q.promise}}),angular.module("confRegistrationWebApp").constant("expenseTypesConstants",{REGISTRATION:"Registration",MISCELLANEOUS_ITEM:"Misc. Item",CHILDCARE:"Childcare",STAFF_TAXABLE_ITEM:"Staff Taxable Expense"}),angular.module("confRegistrationWebApp").factory("currentRegistrationInterceptor",function($q,$injector){return{responseError:function(rejection){var regExp=/conferences\/[-a-zA-Z0-9]+\/registrations\/current\/?$/;if(404===rejection.status&&regExp.test(rejection.config.url)){var url=rejection.config.url.split("/");return _.isEmpty(_.last(url))&&url.pop(),url.pop(),$injector.get("$http").post(url.join("/"),{})}return $q.reject(rejection)}}}),angular.module("confRegistrationWebApp").service("GrowlService",function GrowlService($rootScope,$timeout){var growlScope,growlObject,growlName,growlTimeout;this.growl=function(scope,name,object,message){growlName=name,growlScope=scope,growlObject=angular.copy(object),$rootScope.growlMessage=message,$timeout.cancel(growlTimeout),growlTimeout=$timeout(function(){$rootScope.growlMessage=""},6e3)},$rootScope.growlUndo=function(){eval("growlScope."+growlName+" = growlObject;"),$rootScope.growlMessage="",$timeout.cancel(growlTimeout)}}),angular.module("confRegistrationWebApp").factory("statusInterceptor",function(){return{response:function(response){return _.isUndefined(response.data.statusCode)||(response.status=response.data.statusCode),response}}}),angular.module("confRegistrationWebApp").factory("httpUrlInterceptor",function(apiUrl){return{request:function(config){var passthroughRegexs=[/https?:\/\/.*/,/^views\/.*/,/template\/.*/],match=function(regexp){return regexp.test(config.url)};return _.any(passthroughRegexs,match)||(config.url=apiUrl+config.url),config}}}),angular.module("confRegistrationWebApp").service("loginDialog",function($injector){this.show=function(status401){var loginDialogOptions={templateUrl:"views/modals/bb0ca02e.3b7ff717.loginDialog.html",controller:function($scope,$modalInstance,$location,apiUrl){$scope.apiUrl=apiUrl,$scope.status401=status401,$scope.gotoRoute=function(path){$modalInstance.dismiss(),$location.path(path)}},backdrop:"static",keyboard:!1},$modal=$injector.get("$modal");$modal.open(loginDialogOptions)}}),angular.module("confRegistrationWebApp").factory("modalMessage",function($rootScope,$modal){var factory={};return factory.error=function(options){_.isObject(options)||(options={message:options}),_.defaults(options,{title:"Error",message:"",forceAction:!1,okString:"Ok"});var scope=$rootScope.$new(!0);scope.title=options.title,scope.message=options.message,scope.okString=options.okString,scope.isArray=_.isArray(options.message);var errorModalConfig={templateUrl:"views/modals/fd32a9e1.fd32a9e1.genericModal.html",scope:scope};options.forceAction&&(errorModalConfig.backdrop="static",errorModalConfig.keyboard=!1),$modal.open(errorModalConfig)},factory.info=function(options){_.isObject(options)||(options={message:options}),_.defaults(options,{title:"Info"}),factory.error(options)},factory.confirm=function(options){_.defaults(options,{title:"",question:"",yesString:"Yes",noString:"No",normalSize:!1});var scope=$rootScope.$new(!0);scope.title=options.title,scope.question=options.question,scope.yesString=options.yesString,scope.noString=options.noString;var confirmModalConfig={templateUrl:"views/modals/d8c7376d.d8c7376d.confirmModal.html",scope:scope};return options.normalSize||(confirmModalConfig.size="sm"),$modal.open(confirmModalConfig).result},factory}),angular.module("confRegistrationWebApp").service("PermissionCache",function($cacheFactory,$http,$q,permissionConstants){var cache=$cacheFactory("permission"),path=function(conferenceId){return"conferences/"+conferenceId+"/permissions/current"},update=function(path,object){cache.put(path,object)},checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(data){data.permissionInt=permissionConstants[data.permissionLevel],update(path,data),callback(data,path)})};this.getForConference=function(conferenceId){var defer=$q.defer();return checkCache(path(conferenceId),defer.resolve),defer.promise},this.getForConferenceCache=function(conferenceId){return cache.get(path(conferenceId))}}),angular.module("confRegistrationWebApp").constant("permissionConstants",{CREATOR:6,FULL:5,UPDATE:4,CHECK_IN:3,SCHOLARSHIP:2,VIEW:1,REQUESTED:0,NONE:0}),angular.module("confRegistrationWebApp").service("ProfileCache",function($cacheFactory,$cookies,$http){var cache=$cacheFactory("profile"),path="profile",checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(profileData){cache.put(path,profileData),callback(profileData,path)})};this.getCache=function(callback){$cookies.crsToken&&checkCache(path,function(profileData){callback&&callback(profileData)})},this.globalGreetingName=function(){var cachedObject=cache.get(path);return angular.isDefined(cachedObject)?cachedObject.firstName:null}}),angular.module("confRegistrationWebApp").service("RegistrationCache",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("registration"),path=function(id){return"registrations/"+(id||"")},update=function(path,object){cache.put(path,angular.copy(object)),$rootScope.$broadcast(path,object)},checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(data){update(path,data),callback(data,path)})};this.update=function(path,registration,cb,errorCallback){if("preview"===$rootScope.registerMode)return $rootScope.previewRegCache=registration,void(cb&&cb());var cachedReg=cache.get(path);angular.equals(registration,cachedReg)||$http.put(path,registration).then(function(){cache.put(path,angular.copy(registration)),cb&&cb()},errorCallback)},this.query=function(id){checkCache(path(id),function(conferences,path){$rootScope.$broadcast(path,conferences)})},this.emptyCache=function(){cache.removeAll()},this.get=function(id){var defer=$q.defer();return checkCache(path(id),defer.resolve),defer.promise},this.getCurrent=function(conferenceId){var defer=$q.defer();return checkCache("conferences/"+conferenceId+"/registrations/current",function(registration){"preview"===$rootScope.registerMode&&(angular.isUndefined($rootScope.previewRegCache)?(registration.completed=!1,registration.registrants=[],$rootScope.previewRegCache=registration):registration=$rootScope.previewRegCache),update(path(registration.id),registration),defer.resolve(registration)}),defer.promise},this.updateCurrent=function(conferenceId,currentRegistration){return"preview"===$rootScope.registerMode?void($rootScope.previewRegCache=currentRegistration):void cache.put("conferences/"+conferenceId+"/registrations/current",angular.copy(currentRegistration))},this.getAllForConference=function(conferenceId,queryParameters){var defer=$q.defer();return $rootScope.loadingMsg="Loading Registrations",$http.get("conferences/"+conferenceId+"/registrations",{params:queryParameters}).success(function(data){$rootScope.loadingMsg="",defer.resolve(data)}).error(function(){$rootScope.loadingMsg="",defer.reject()}),defer.promise}}),angular.module("confRegistrationWebApp").factory("unauthorizedInterceptor",function($q,$cookies,loginDialog){return{responseError:function(rejection){return 401===rejection.status&&angular.isDefined($cookies.crsToken)&&loginDialog.show(!0),$q.reject(rejection)}}}),angular.module("confRegistrationWebApp").constant("uuid",function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})}),angular.module("confRegistrationWebApp").service("validateRegistrant",function(){var blockVisibleRuleCheck=function(block,registrant){var returnValue=!0,answers=registrant.answers;return angular.forEach(block.rules,function(rule){var answer=_.find(answers,{blockId:rule.parentBlockId});angular.isUndefined(answer)||""===answer.value?returnValue=!1:"="===rule.operator&&answer.value!==rule.value?returnValue=!1:"!="===rule.operator&&answer.value===rule.value?returnValue=!1:">"===rule.operator&&answer.value<=rule.value?returnValue=!1:"<"===rule.operator&&answer.value>=rule.value&&(returnValue=!1)}),returnValue},blockInRegistrantType=function(block,registrant){return!_.contains(block.registrantTypes,registrant.registrantTypeId)};this.blockVisible=function(block,registrant,isAdmin){var visible=angular.isDefined(registrant)&&blockVisibleRuleCheck(block,registrant)&&blockInRegistrantType(block,registrant);return!(block.adminOnly&&!isAdmin)&&visible},this.validate=function(conference,registrant,page){var invalidBlocks=[];conference=angular.copy(conference);var blocks=page?_.find(conference.registrationPages,{id:page}).blocks:_.flatten(conference.registrationPages,"blocks");return angular.forEach(blocks,function(block){if(block.required&&!block.adminOnly&&blockVisibleRuleCheck(block,registrant)&&blockInRegistrantType(block,registrant)){var answer=_.find(registrant.answers,{blockId:block.id});if(angular.isUndefined(answer))return void invalidBlocks.push(block.id);switch(answer=answer.value,block.type){case"nameQuestion":if(_.isEmpty(answer.firstName)||_.isEmpty(answer.lastName))return void invalidBlocks.push(block.id);break;case"emailQuestion":if(_.isEmpty(answer)||_.isNull(answer.match(/^.+@.+$/)))return void invalidBlocks.push(block.id);break;case"numberQuestion":if(!_.isNumber(answer))return void invalidBlocks.push(block.id);break;case"phoneQuestion":if(_.isNull(answer)||_.isNull(answer.match(/^(\D*\d\D*){10,15}$/)))return void invalidBlocks.push(block.id);break;default:if(_.isEmpty(answer))return void invalidBlocks.push(block.id)}}}),invalidBlocks}});