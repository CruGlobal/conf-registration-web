# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

language:
    node_js
node_js:
    - 0.10
branches:
    only:
        - master
env:
    global:
        # GH_OAUTH_TOKEN is the oauth token generated as described at
        # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
        #
        # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
        #
        # It must be encrypted using the travis gem
        # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
        #
        # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
        #
        # User specific env variables
        - GH_OWNER: CruGlobal
        - GH_PROJECT_NAME: conf-registration-web
        # This .travis.yml file instructs travis-ci.org to build your master branch using `yeoman build`
        # and deploy the output to your project's gh-pages branch.

before_script:
    # install dependencies
    - gem update --system
    - npm install -g grunt-cli bower
    - if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then export GH_PUBLISH_TO_MODULE='build-stage'; GH_COMMIT_MSG='deployable PR ${TRAVIS_PULL_REQUEST} to ${GH_PUBLISH_TO_MODULE}'; fi
    - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then export GH_PUBLISH_TO_MODULE='gh-pages'; GH_COMMIT_MSG='deployable master to ${GH_PUBLISH_TO_MODULE}'; fi
script:
    # We want to gate on passing tests and a successful build
    - bower install
    - if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then grunt build:stage; fi
    - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then grunt build:dist; fi
after_success:
    - git submodule add -b ${GH_PUBLISH_TO_MODULE} git@github.com:${GH_OWNER}/${GH_PROJECT_NAME} site
    - cd site
    - if git checkout ${GH_PUBLISH_TO_MODULE}; then git checkout -b ${GH_PUBLISH_TO_MODULE}; fi
    - git rm -r .
    - cp -R ../dist/* .
    - cp ../dist/.* .
    - git add -f .
    - git config user.email "ryan.t.carlson@cru.org"
    - git config user.name "ryancarlson"
    - git commit -am "${GH_COMMIT_MSG}"
    - git push git@github.com:${GH_OWNER}/${GH_PROJECT_NAME} HEAD:${GH_PUBLISH_TO_MODULE}
before_install:
    - "export DISPLAY=:99.0"
    - "sh -e /etc/init.d/xvfb start"
